action_pool_depth
    Current value (from the default) = -1
      From //build/toolchain/BUILD.gn:10

    Pool for non goma tasks.

allow_critical_memory_pressure_handling_in_foreground
    Current value (from the default) = false
      From //content/common/features.gni:13

    Whether to perform critical memory pressure handling when in foreground (if
    false, critical memory pressure is treated like moderate pressure in foreground).

alternate_cdm_storage_id_key
    Current value (from the default) = ""
      From //media/media_options.gni:177

    If |enable_cdm_storage_id| is set, then an implementation specific key
    must also be provided. It can be provided by defining CDM_STORAGE_ID_KEY
    (which takes precedence), or by setting |alternate_cdm_storage_id_key|.
    The key must be a string of at least 32 characters.

android_channel
    Current value (from the default) = "default"
      From //build/config/android/channel.gni:8

    The channel to build on Android: stable, beta, dev, canary, work, or
    default. "default" should be used on non-official builds.

android_full_debug
    Current value (from the default) = false
      From //build/config/compiler/BUILD.gn:49

    Normally, Android builds are lightly optimized, even for debug builds, to
    keep binary size down. Setting this flag to true disables such optimization

angle_64bit_current_cpu
    Current value (from the default) = true
      From //third_party/angle/gni/angle.gni:57

angle_build_all
    Current value (from the default) = false
      From //third_party/angle/BUILD.gn:34

    Don't build extra (test, samples etc) for Windows UWP. We don't have
    infrastructure (e.g. windowing helper functions) in place to run them.

angle_build_capture_replay_tests
    Current value (from the default) = false
      From //third_party/angle/src/tests/capture_replay_tests/BUILD.gn:9

    Determines if we build the capture_replay_tests. Off by default.

angle_capture_replay_composite_file_id
    Current value (from the default) = 1
      From //third_party/angle/src/tests/capture_replay_tests/BUILD.gn:14

angle_capture_replay_test_trace_dir
    Current value (from the default) = "traces"
      From //third_party/angle/src/tests/capture_replay_tests/BUILD.gn:12

    Set the trace directory. Default is traces

angle_delegate_workers
    Current value (from the default) = true
      From //third_party/angle/gni/angle.gni:98

    By default, ANGLE is using a thread pool for parallel compilation.
    Activating the delegate worker results in posting the tasks using the
    embedder API. In Chromium code base, it results in sending tasks to the
    worker thread pool.

angle_enable_commit_id
    Current value (from the default) = true
      From //third_party/angle/BUILD.gn:37

    Enable generating current commit information using git

angle_enable_custom_vulkan_cmd_buffers
    Current value (from the default) = true
      From //third_party/angle/src/libANGLE/renderer/vulkan/BUILD.gn:14

    Enable custom (cpu-side) secondary command buffers

angle_enable_d3d11
    Current value (from the default) = false
      From //third_party/angle/gni/angle.gni:101

angle_enable_d3d9
    Current value (from the default) = false
      From //third_party/angle/gni/angle.gni:100

angle_enable_essl
    Current value (from the default) = true
      From //third_party/angle/gni/angle.gni:115

angle_enable_gl
    Current value (from the default) = true
      From //third_party/angle/gni/angle.gni:103

angle_enable_gl_null
    Current value (from the default) = true
      From //third_party/angle/gni/angle.gni:129

angle_enable_glsl
    Current value (from the default) = true
      From //third_party/angle/gni/angle.gni:116

angle_enable_hlsl
    Current value (from the default) = false
      From //third_party/angle/gni/angle.gni:130

angle_enable_metal
    Current value (from the default) = true
      From //third_party/angle/gni/angle.gni:119

    http://anglebug.com/2634

angle_enable_null
    Current value (from the default) = true
      From //third_party/angle/gni/angle.gni:114

angle_enable_overlay
    Current value (from the default) = false
      From //third_party/angle/gni/angle.gni:140

    Disable overlay by default

angle_enable_swiftshader
    Current value (from the default) = true
      From //third_party/angle/gni/angle.gni:127

angle_enable_trace
    Current value (from the default) = false
      From //third_party/angle/gni/angle.gni:131

angle_enable_vulkan
    Current value (from the default) = true
      From //third_party/angle/gni/angle.gni:110

angle_enable_vulkan_gpu_trace_events
    Current value (from the default) = false
      From //third_party/angle/src/libANGLE/renderer/vulkan/BUILD.gn:17

    Enable Vulkan GPU trace event capability

angle_enable_vulkan_validation_layers
    Current value (from the default) = false
      From //third_party/angle/gni/angle.gni:136

angle_extract_native_libs
    Current value (from the default) = false
      From //third_party/angle/gni/angle.gni:11

    Extract native libs in ANGLE apk. Useful for flamegraph generation.

angle_is_winuwp
    Current value (from the default) = false
      From //third_party/angle/gni/angle.gni:80

    There's no "is_winuwp" helper in BUILDCONFIG.gn, so we define one ourselves

angle_libs_suffix
    Current value (from the default) = ""
      From //third_party/angle/gni/angle.gni:86

angle_link_glx
    Current value (from the default) = false
      From //third_party/angle/BUILD.gn:26

    Link in system libGL, to work with apitrace.  See doc/DebuggingTips.md.

angle_shared_libvulkan
    Current value (from the default) = false
      From //third_party/angle/gni/angle.gni:77

    Vulkan loader is statically linked on Mac. http://anglebug.com/4477

angle_with_capture_by_default
    Current value (from the default) = false
      From //third_party/angle/BUILD.gn:30

    Defaults to capture building to $root_out_dir/angle_libs/with_capture.
    Switch on to build capture to $root_out_dir.

apm_debug_dump
    Current value (from the default) = false
      From //third_party/webrtc/webrtc.gni:97

    Selects whether debug dumps for the audio processing module
    should be generated.

archive_seed_corpus
    Current value (from the default) = true
      From //build/config/sanitizers/sanitizers.gni:116

    When true, seed corpora archives are built.

asan_globals
    Current value (from the default) = false
      From //build/config/sanitizers/sanitizers.gni:179

    Detect overflow/underflow for global objects.
   
    Mac: http://crbug.com/352073

asan_use_blacklist
    Current value (from the default) = true
      From //build/config/sanitizers/sanitizers.gni:108

    Use blacklists from tools/memory/asan when compiling with asan.

auto_profile_path
    Current value (from the default) = ""
      From //build/config/compiler/BUILD.gn:75

    AFDO (Automatic Feedback Directed Optimizer) is a form of profile-guided
    optimization that GCC supports. It used by ChromeOS in their official
    builds. To use it, set auto_profile_path to the path to a file containing
    the needed gcov profiling data.

blink_animation_use_time_delta
    Current value (from the default) = false
      From //third_party/blink/renderer/core/animation/BUILD.gn:11

    Use base::TimeDelta to represent time in renderer/core/animations. See
    http://crbug.com/737867

blink_gc_plugin
    Current value (from the default) = true
      From //third_party/blink/renderer/BUILD.gn:17

    Set to true to enable the clang plugin that checks the usage of the  Blink
    garbage-collection infrastructure during compilation.

blink_gc_plugin_option_do_dump_graph
    Current value (from the default) = false
      From //third_party/blink/renderer/BUILD.gn:21

    Set to true to have the clang Blink GC plugin emit class graph (in JSON)
    with typed pointer edges; for debugging or other (internal) uses.

blink_gc_plugin_option_warn_unneeded_finalizer
    Current value (from the default) = false
      From //third_party/blink/renderer/BUILD.gn:26

    Set to true to have the clang Blink GC plugin additionally check if
    a class has an empty destructor which would be unnecessarily invoked
    when finalized.

blink_symbol_level
    Current value (from the default) = -1
      From //third_party/blink/renderer/config.gni:32

    How many symbols to include in the build of blink. This affects
    the performance of the build since the symbols are large and dealing with
    them is slow.
      2 means regular build with symbols.
      1 means minimal symbols, usually enough for backtraces only. Symbols with
    internal linkage (static functions or those in anonymous namespaces) may not
    appear when using this level.
      0 means no symbols.
      -1 means auto-set according to debug/release and platform.

branding_file_path
    Current value (from the default) = "//chrome/app/theme/chromium/BRANDING"
      From //build/config/chrome_build.gni:28

    The path to the BRANDING file in chrome/app/theme.

branding_path_component
    Current value (from the default) = "chromium"
      From //build/config/chrome_build.gni:22

build_angle_deqp_tests
    Current value (from the default) = false
      From //third_party/angle/src/tests/BUILD.gn:12

    Don't build dEQP by default.

build_angle_gles1_conform_tests
    Current value (from the default) = false
      From //third_party/angle/src/tests/BUILD.gn:13

build_angle_trace_perf_tests
    Current value (from the default) = false
      From //third_party/angle/src/tests/BUILD.gn:14

build_contextual_search
    Current value (from the default) = false
      From //components/contextual_search/features.gni:6

build_dawn_tests
    Current value (from the default) = true
      From //ui/gl/features.gni:20

    Should Dawn test binaries (unittests, end2end_tests, perf_tests) be built?
    Independent of use_dawn, which controls whether Dawn is used in Chromium.

build_display_configuration
    Current value (from the default) = false
      From //ui/display/display.gni:7

    Build Chrome OS display configuration code.

build_libsrtp_tests
    Current value (from the default) = false
      From //third_party/libsrtp/BUILD.gn:10

    Tests may not be appropriate for some build environments, e.g. Windows.
    Rather than enumerate valid options, we just let clients ask for them.

build_with_mozilla
    Current value (from the default) = false
      From //third_party/webrtc/webrtc.gni:124

    Enable to use the Mozilla internal settings.

build_with_tflite_lib
    Current value (from the default) = false
      From //chrome/services/machine_learning/features.gni:7

    This enables build with TFLite library.

builtin_cert_verifier_feature_supported
    Current value (from the default) = true
      From //net/features.gni:47

    Platforms where both the builtin cert verifier and a platform verifier are
    supported and may be switched between using the CertVerifierBuiltin feature
    flag. This does not include platforms where the builtin cert verifier is
    the only verifier supported.

builtin_cert_verifier_policy_supported
    Current value (from the default) = true
      From //chrome/common/features.gni:30

    Platforms where the BuiltinCertificateVerifierEnabled enterprise policy is
    supported. This must must match the supported_on list of the policy in
    policy_templates.json and be a subset of the
    builtin_cert_verifier_feature_supported platforms.
    See crbug.com/410574.  This can be removed when the builtin verifier is
    unconditionally enabled on all platforms.

bundle_pool_depth
    Current value (from the default) = -1
      From //build/toolchain/mac/BUILD.gn:29

    Reduce the number of tasks using the copy_bundle_data and compile_xcassets
    tools as they can cause lots of I/O contention when invoking ninja with a
    large number of parallel jobs (e.g. when using distributed build like goma).

cast_is_debug
    Current value (from the default) = true
      From //build/config/chromecast_build.gni:16

    If true, IS_CAST_DEBUG_BUILD() will evaluate to 1 in version.h. Otherwise,
    it will evaluate to 0. Overriding this when is_debug=false is useful for
    doing engineering builds.

cc_wrapper
    Current value (from the default) = ""
      From //build/toolchain/cc_wrapper.gni:36

    Set to "ccache", "icecc" or "distcc".  Probably doesn't work on windows.

chrome_pgo_phase
    Current value (from the default) = 0
      From //build/config/compiler/pgo/pgo.gni:11

    Specify the current PGO phase.
    Here's the different values that can be used:
        0 : Means that PGO is turned off.
        1 : Used during the PGI (instrumentation) phase.
        2 : Used during the PGO (optimization) phase.

chromecast_branding
    Current value (from the default) = "public"
      From //build/config/chromecast_build.gni:20

    chromecast_branding is used to include or exclude Google-branded components.
    Set it to "public" for a Chromium build.

chromeos_afdo_platform
    Current value (from the default) = "silvermont"
      From //build/config/compiler/BUILD.gn:98

    This configuration is used to select a default profile in Chrome OS based on
    the microarchitectures we are using. This is only used if
    clang_use_default_sample_profile is true and clang_sample_profile_path is
    empty.

chromeos_is_browser_only
    Current value (from the default) = false
      From //build/config/chromeos/ui_mode.gni:11

    This controls UI configuration for Chrome.
    If this flag is set, we assume Chrome runs on Chrome OS devices, using
    Wayland (instead of X11).
    TODO(crbug.com/1052397): After the clean up, this should be
    replaced with 'target_os = "chromeos" && ui_mode == "browser"'.

clang_base_path
    Current value (from the default) = "//third_party/llvm-build/Release+Asserts"
      From //build/config/clang/clang.gni:17

clang_diagnostic_dir
    Current value (from the default) = "../../tools/clang/crashreports"
      From //build/config/compiler/compiler.gni:102

clang_emit_debug_info_for_profiling
    Current value (from the default) = false
      From //build/config/compiler/BUILD.gn:101

    Emit debug information for profiling wile building with clang.

clang_sample_profile_path
    Current value (from the default) = ""
      From //build/config/compiler/BUILD.gn:82

    Path to an AFDO profile to use while building with clang, if any. Empty
    implies none.

clang_use_chrome_plugins
    Current value (from the default) = true
      From //build/config/clang/clang.gni:14

clang_use_default_sample_profile
    Current value (from the default) = false
      From //build/config/compiler/BUILD.gn:91

clang_version
    Current value (from the default) = "12.0.0"
      From //build/toolchain/toolchain.gni:42

    Clang compiler version. Clang files are placed at version-dependent paths.

com_init_check_hook_disabled
    Current value (from the default) = false
      From //base/BUILD.gn:70

    Set to true to disable COM init check hooks.

compiler_timing
    Current value (from the default) = false
      From //build/config/compiler/BUILD.gn:104

    Turn this on to have the compiler output extra timing information.

compute_build_timestamp
    Current value (from the default) = "compute_build_timestamp.py"
      From //build/timestamp.gni:17

    This should be the filename of a script that prints a single line
    containing an integer that's a unix timestamp in UTC.
    This timestamp is used as build time and will be compiled into
    other code.
   
    This argument may look unused. Before removing please check with the
    chromecast team to see if they still use it internally.

compute_inputs_for_analyze
    Current value (from the default) = false
      From //build/config/compute_inputs_for_analyze.gni:13

    Enable this flag when running "gn analyze".
   
    This causes some gn actions to compute inputs immediately (via exec_script)
    where they would normally compute them only when executed (and write them to
    a depfile).
   
    This flag will slow down GN, but is required for analyze to work properly.

concurrent_links
    Current value (from the default) = -1
      From //build/toolchain/concurrent_links.gni:21

    Limit the number of concurrent links; we often want to run fewer
    links at once than we do compiles, because linking is memory-intensive.
    The default to use varies by platform and by the amount of memory
    available, so we call out to a script to get the right value.

content_shell_major_version
    Current value (from the default) = "999"
      From //content/shell/BUILD.gn:34

content_shell_product_name
    Current value (from the default) = "Content Shell"
      From //content/shell/BUILD.gn:32

content_shell_version
    Current value (from the default) = "999.77.34.5"
      From //content/shell/BUILD.gn:33

coverage_instrumentation_input_file
    Current value (from the default) = ""
      From //build/config/coverage/coverage.gni:29

    The path to the coverage instrumentation input file should be a source root
    absolute path (e.g. //out/Release/coverage_instrumentation_input.txt), and
    the file consists of multiple lines where each line represents a path to a
    source file, and the paths must be relative to the root build directory.
    e.g. ../../base/task/post_task.cc for build directory 'out/Release'.
   
    NOTE that this arg will be non-op if use_clang_coverage is false.

cppgc_enable_caged_heap
    Current value (from the default) = true
      From //v8/BUILD.gn:257

    Enable heap reservation of size 4GB. Only possible for 64bit archs.

cppgc_enable_object_names
    Current value (from the default) = false
      From //v8/BUILD.gn:254

    Enable object names in cppgc for debug purposes.

cppgc_enable_young_generation
    Current value (from the default) = false
      From //v8/BUILD.gn:260

    Enable young generation in cppgc.

crashpad_dependencies
    Current value = "chromium"
      From //.gn:51
    Overridden from the default = "standalone"
      From //third_party/crashpad/crashpad/build/crashpad_buildconfig.gni:19

    Determines various flavors of build configuration, and which concrete
    targets to use for dependencies. Valid values are "standalone", "chromium",
    "fuchsia", "dart" or "external".

crashpad_use_boringssl_for_http_transport_socket
    Current value (from the default) = false
      From //third_party/crashpad/crashpad/util/net/tls.gni:22

cros_board
    Current value (from the default) = ""
      From //build/config/chromeos/args.gni:8

    This is used only by Simple Chrome to bind its value to test-runner scripts
    generated at build-time.

cros_sdk_version
    Current value (from the default) = ""
      From //build/config/chromeos/args.gni:12

    Similar to cros_board above, this used only by test-runner scripts in
    Simple Chrome.

current_cpu
    Current value (from the default) = ""
      (Internally set; try `gn help current_cpu`.)

current_os
    Current value (from the default) = ""
      (Internally set; try `gn help current_os`.)

custom_toolchain
    Current value (from the default) = ""
      From //build/config/BUILDCONFIG.gn:144

    Allows the path to a custom target toolchain to be injected as a single
    argument, and set as the default toolchain.

dawn_always_assert
    Current value (from the default) = false
      From //third_party/dawn/scripts/dawn_features.gni:33

    Enable Dawn's ASSERTs even in release builds

dawn_complete_static_libs
    Current value (from the default) = false
      From //third_party/dawn/scripts/dawn_features.gni:38

    Should the Dawn static libraries be fully linked vs. GN's default of
    treating them as source sets. This is useful for people using Dawn
    standalone to produce static libraries to use in their projects.

dawn_enable_cross_reflection
    Current value (from the default) = false
      From //third_party/dawn/scripts/dawn_features.gni:63

    Enable use of reflection compiler in spirv-cross. This is needed
    if performing reflection on systems that the platform language
    shader is SPIR-V, since there isn't an instance of the
    GLSL/HLSL/MSL compiler. This implicitly pulls in the GLSL
    compiler, since it is a sub-class of it.

dawn_enable_d3d12
    Current value (from the default) = false
      From //third_party/dawn/scripts/dawn_features.gni:41

    Enables the compilation of Dawn's D3D12 backend

dawn_enable_error_injection
    Current value (from the default) = true
      From //third_party/dawn/scripts/dawn_features.gni:67

dawn_enable_metal
    Current value (from the default) = true
      From //third_party/dawn/scripts/dawn_features.gni:44

    Enables the compilation of Dawn's Metal backend

dawn_enable_null
    Current value (from the default) = true
      From //third_party/dawn/scripts/dawn_features.gni:48

    Enables the compilation of Dawn's Null backend
    (required for unittests, obviously non-conformant)

dawn_enable_opengl
    Current value (from the default) = false
      From //third_party/dawn/scripts/dawn_features.gni:52

    Enables the compilation of Dawn's OpenGL backend
    (best effort, non-conformant)

dawn_enable_vulkan
    Current value (from the default) = false
      From //third_party/dawn/scripts/dawn_features.gni:56

dawn_enable_vulkan_loader
    Current value (from the default) = false
      From //third_party/dawn/scripts/dawn_features.gni:87

    Uses our built version of the Vulkan loader on platforms where we can't
    assume to have one present at the system level.

dawn_enable_vulkan_validation_layers
    Current value (from the default) = false
      From //third_party/dawn/scripts/dawn_features.gni:83

dawn_enable_wgsl
    Current value (from the default) = true
      From //third_party/dawn/scripts/dawn_features.gni:74

    Enable support WGSL for shaders.
    Turned off for Skia, because Tint is currently not part of its DEPS.

dawn_use_swiftshader
    Current value (from the default) = false
      From //third_party/dawn/scripts/dawn_features.gni:28

    Enables usage of swiftshader on the Vulkan backend.
    Note that this will only work in standalone and in projects that set the
    dawn_swiftshader_dir variable in build_overrides/dawn.gni
    Because of how the Vulkan loader works, setting this makes Dawn only able
    to find the Swiftshader ICD and not the others.
    Enabled by default when fuzzing.

dawn_use_x11
    Current value (from the default) = false
      From //third_party/dawn/scripts/dawn_features.gni:70

    Whether Dawn should enable X11 support.

dcheck_always_on
    Current value (from the default) = false
      From //build/config/dcheck_always_on.gni:14

    Set to true to enable dcheck in Release builds.

dcheck_is_configurable
    Current value (from the default) = false
      From //build/config/dcheck_always_on.gni:9

    Enables DCHECKs to be built-in, but to default to being non-fatal/log-only.
    DCHECKS can then be set as fatal/non-fatal via the DCheckIsFatal feature.
    See crbug.com/596231 for details on how this is used.

disable_brotli_filter
    Current value (from the default) = false
      From //net/features.gni:23

    Do not disable brotli filter by default.

disable_file_support
    Current value (from the default) = false
      From //net/features.gni:9

    Disables support for file URLs.  File URL support requires use of icu.

disable_ftp_support
    Current value (from the default) = false
      From //net/features.gni:14

disable_histogram_support
    Current value (from the default) = true
      From //components/cronet/BUILD.gn:16

    If set to true, this will remove histogram manager to reduce binary size.

disable_libfuzzer
    Current value (from the default) = false
      From //build/config/sanitizers/sanitizers.gni:91

    Helper variable for testing builds with disabled libfuzzer.
    Not for client use.

enable_additional_blink_object_names
    Current value (from the default) = false
      From //third_party/blink/public/public_features.gni:21

    If enable_additional_blink_object_names is set to true, then blink provides
    additional debug names of blink-internal (i.e. oilpan) object names at the
    cost of additional memory. Many of these objects only show up in heap
    snapshots if the parameter `treatGlobalObjectsAsRoots` of `takeHeapSnapshot`
    is set.

enable_arcore
    Current value (from the default) = false
      From //device/vr/buildflags/buildflags.gni:45

    Controls inclusion of code for ARCore that must be identical across configs.
    Once crbug.com/920424 is resolved, this will exactly control whether ARCore
    is supported.
    TODO(crbug.com/843374): AR should not depend on |enable_vr|.

enable_assistant_integration_tests
    Current value (from the default) = false
      From //chromeos/assistant/assistant.gni:18

    Enable Assistant integration tests using LibAssistant and a fake S3 server.
    This requires libassistant.so to support grpc communication with the S3
    server, which increases the library size, which is why we introduced this
    flag to disable them in the release builds.

enable_autofill_assistant_api
    Current value (from the default) = false
      From //extensions/buildflags/buildflags.gni:16

    Compile time flag for the Autofill Assistant API.
    WARNING: This must not be enabled in official builds.

enable_av1_decoder
    Current value (from the default) = true
      From //media/media_options.gni:98

enable_background_contents
    Current value (from the default) = true
      From //chrome/common/features.gni:33

    Enables support for background apps.

enable_background_mode
    Current value (from the default) = true
      From //chrome/common/features.gni:34

enable_base_tracing
    Current value (from the default) = true
      From //build_overrides/build.gni:22

    Tracing support requires //third_party/perfetto, which is not available in
    libchrome (CrOS's version of //base). This flag can disable tracing support
    altogether, in which case all tracing instrumentation in //base becomes a
    no-op.
    TODO(crbug/1065905): Add dependency on perfetto to support typed events.

enable_basic_print_dialog
    Current value (from the default) = true
      From //chrome/common/features.gni:38

    Enable the printing system dialog for platforms that support printing
    and have a system dialog.

enable_basic_printing
    Current value (from the default) = true
      From //printing/buildflags/buildflags.gni:12

    Enable basic printing support and UI.

enable_blink_bindings_tracing
    Current value (from the default) = false
      From //third_party/blink/renderer/platform/BUILD.gn:188

    Enable TRACE_EVENT instrumentation for Blink bindings. Disabled by default as it increases binary size.

enable_blink_heap_verification
    Current value (from the default) = false
      From //third_party/blink/public/public_features.gni:9

    Enables additional Oilpan heap verification instrumentation.

enable_blink_heap_young_generation
    Current value (from the default) = false
      From //third_party/blink/public/public_features.gni:12

    Enables young generation collections in Oilpan.

enable_call_graph_profile_sort
    Current value (from the default) = false
      From //build/config/compiler/BUILD.gn:153

    Turn off the --call-graph-profile-sort flag for lld by default. Enable
    selectively for targets where it's beneficial.

enable_callgrind
    Current value (from the default) = false
      From //third_party/pdfium/pdfium.gni:57

    Enable callgrind for performance profiling

enable_captive_portal_detection
    Current value (from the default) = true
      From //components/captive_portal/core/features.gni:9

enable_cast_renderer
    Current value (from the default) = false
      From //build/config/chromecast_build.gni:50

enable_cdm_host_verification
    Current value (from the default) = false
      From //media/media_options.gni:166

enable_cdm_storage_id
    Current value (from the default) = false
      From //media/media_options.gni:170

    Enable Storage ID which is used by CDMs. This is only available with chrome
    branding, but may be overridden by other embedders.

enable_click_to_call
    Current value (from the default) = true
      From //chrome/common/features.gni:41

    Enables the Click to Call feature on desktop platforms.

enable_cros_libassistant
    Current value (from the default) = false
      From //chromeos/assistant/assistant.gni:5

    Enable assistant implementation based on libassistant.

enable_cros_media_app
    Current value (from the default) = false
      From //chromeos/components/media_app_ui/media_app_ui.gni:6

    Whether to enable the "real" ChromeOS Media App. When false, a mock app is
    bundled for testing integration points.

enable_cros_on_device_assistant
    Current value (from the default) = false
      From //chromeos/assistant/assistant.gni:6

enable_cross_trusted
    Current value (from the default) = false
      From //native_client_sdk/src/BUILD.gn:10

    Set to true if cross compiling trusted (e.g. building sel_ldr_arm on x86)
    binaries is supported.

enable_dav1d_decoder
    Current value (from the default) = true
      From //media/media_options.gni:89

enable_debugallocation
    Current value (from the default) = true
      From //base/allocator/BUILD.gn:14

    Provide a way to force disable debugallocation in Debug builds,
    e.g. for profiling (it's more rare to profile Debug builds,
    but people sometimes need to do that).

enable_discovery
    Current value (from the default) = false
      From //chrome/browser/sharing/buildflags.gni:6

enable_downgrade_processing
    Current value (from the default) = true
      From //chrome/browser/downgrade/buildflags.gni:8

enable_downstream_media_tests
    Current value (from the default) = false
      From //chrome/test/media_router/BUILD.gn:10

    Many of the targets defined in this file have dependencies that cannot be
    satisfied without additional downstream resources. Explicitly guard them
    them behind this flag so that we do not attempt to build or isolate targets
    in public chromium checkouts.

enable_dsyms
    Current value (from the default) = false
      From //build/config/mac/symbols.gni:17

    Produce dSYM files for targets that are configured to do so. dSYM
    generation is controlled globally as it is a linker output (produced via
    the //build/toolchain/mac/linker_driver.py. Enabling this will result in
    all shared library, loadable module, and executable targets having a dSYM
    generated.

enable_extensions
    Current value (from the default) = true
      From //extensions/buildflags/buildflags.gni:8

enable_fake_assistant_microphone
    Current value (from the default) = false
      From //chromeos/assistant/assistant.gni:10

    Enable a fake microphone, which can replay audio files as microphone input.
    See chromeos/assistant/tools/send-audio.sh

enable_feed_in_chrome
    Current value (from the default) = false
      From //components/feed/features.gni:8

enable_feed_v2
    Current value (from the default) = false
      From //components/feed/features.gni:9

enable_ffmpeg_video_decoders
    Current value (from the default) = true
      From //media/media_options.gni:143

    On Android, FFMpeg is built without video decoders by default.
    This flag gives the option to override that decision in case there are no
    hardware decoders. To do so, you will also need to update ffmpeg build files
    in order to define which decoders to build in.

enable_full_stack_frames_for_profiling
    Current value (from the default) = false
      From //build/config/compiler/BUILD.gn:56

    Compile in such a way as to make it possible for the profiler to unwind full
    stack frames. Setting this flag has a large effect on the performance of the
    generated code than just setting profiling, but gives the profiler more
    information to analyze.
    Requires profiling to be set to true.

enable_google_benchmarks
    Current value (from the default) = false
      From //third_party/google_benchmark/buildconfig.gni:11

    Google Benchmark is not checked out by default, because it is only used by
    a few specialized benchmarks that most developers do not interact with.

enable_gpu_client_logging
    Current value (from the default) = false
      From //gpu/command_buffer/client/BUILD.gn:13

    Enable GPU client logging without DCHECK being on.

enable_gpu_service_logging
    Current value (from the default) = false
      From //ui/gl/BUILD.gn:17

    Whether service side logging (actual calls into the GL driver) is enabled
    or not.

enable_gvr_services
    Current value (from the default) = false
      From //device/vr/buildflags/buildflags.gni:10

enable_gwp_asan
    Current value (from the default) = true
      From //components/gwp_asan/buildflags/buildflags.gni:26

    Convenience definition

enable_gwp_asan_malloc
    Current value (from the default) = true
      From //components/gwp_asan/buildflags/buildflags.gni:20

    Is GWP-ASan malloc/PartitionAlloc hooking enabled for chrome/ on a given
    platform.

enable_gwp_asan_partitionalloc
    Current value (from the default) = true
      From //components/gwp_asan/buildflags/buildflags.gni:21

enable_hangout_services_extension
    Current value (from the default) = false
      From //chrome/common/features.gni:45

    Hangout services is an extension that adds extra features to Hangouts.
    It is enableable separately to facilitate testing.

enable_hls_sample_aes
    Current value (from the default) = false
      From //media/media_options.gni:84

    Enable HLS with SAMPLE-AES decryption.

enable_ipc_fuzzer
    Current value (from the default) = false
      From //tools/ipc_fuzzer/ipc_fuzzer.gni:15

enable_ipc_logging
    Current value (from the default) = true
      From //ipc/features.gni:7

    Enabling debug builds automatically sets enable_ipc_logging to true.

enable_iterator_debugging
    Current value (from the default) = false
      From //build/config/c++/c++.gni:41

    When set, enables libc++ debug mode with iterator debugging.
   
    Iterator debugging is generally useful for catching bugs. But it can
    introduce extra locking to check the state of an iterator against the state
    of the current object. For iterator- and thread-heavy code, this can
    significantly slow execution - two orders of magnitude slowdown has been
    seen (crbug.com/903553) and iterator debugging also slows builds by making
    generation of snapshot_blob.bin take ~40-60 s longer. Therefore this
    defaults to off.

enable_js_type_check
    Current value (from the default) = false
      From //third_party/closure_compiler/compile_js.gni:11

    Enable closure type-checking for Chrome's web technology-based UI. This
    enables the webui_closure_compile target which does a no-op without this
    flag enabled. Requires Java.

enable_kaleidoscope
    Current value (from the default) = false
      From //chrome/browser/buildflags.gni:10

    Enable Kaleidoscope if we are not Android and we have access to the internal
    code.

enable_keystone_registration_framework
    Current value (from the default) = true
      From //chrome/BUILD.gn:51

    Indicates whether keystone registration framework should be enabled (see
    action("keystone_registration_framework") below).  There are some tests
    where we'd like for it to be disabled. (https://crbug.com/909080)

enable_kythe_annotations
    Current value (from the default) = false
      From //build/toolchain/kythe.gni:10

    Enables Kythe annotations necessary to build cross references.

enable_libaom
    Current value (from the default) = false
      From //third_party/libaom/options.gni:5

    Enable encoding and decoding AV1 video files.

enable_libaom_decoder
    Current value (from the default) = false
      From //third_party/libaom/options.gni:7

    To be deprecated soon.

enable_libgav1_decoder
    Current value (from the default) = false
      From //third_party/libgav1/options.gni:10

enable_linux_installer
    Current value (from the default) = false
      From //chrome/installer/BUILD.gn:10

enable_location_source
    Current value (from the default) = true
      From //base/BUILD.gn:55

    Indicates if the Location object contains the source code information
    (file, function, line). False means only the program counter (and currently
    file name) is saved.

enable_log_error_not_reached
    Current value (from the default) = false
      From //build/config/logging.gni:9

    Use LogErrorNotReached() for NOTREACHED().

enable_logging_override
    Current value (from the default) = false
      From //media/media_options.gni:87

    Enable logging override, e.g. enable DVLOGs at build time.

enable_mdns
    Current value (from the default) = true
      From //net/features.gni:26

    Multicast DNS.

enable_media_drm_storage
    Current value (from the default) = false
      From //media/media_options.gni:93

    Enable browser managed persistent metadata storage for EME persistent
    session and persistent usage record session.

enable_media_remoting
    Current value (from the default) = true
      From //media/media_options.gni:242

    This switch defines whether the Media Remoting implementation will be built.
    When enabled, media is allowed to be renderer and played back on remote
    devices when the tab is being casted and other conditions are met.

enable_media_remoting_rpc
    Current value (from the default) = true
      From //media/media_options.gni:248

    Media Remoting RPC is disabled on Android since it's unused but increases
    the native binary size by ~70Kb.

enable_media_router_jscompile
    Current value (from the default) = false
      From //chrome/browser/resources/media_router/extension/BUILD.gn:6

    Determines whether JSCompiler should be used to typecheck
    JavaScript code for the Media Router extension.

enable_message_center
    Current value (from the default) = true
      From //ui/base/ui_features.gni:15

    Whether the message center should be included for displaying notifications.

enable_modular_updater
    Current value (from the default) = false
      From //build/config/chromecast_build.gni:30

    Set true to enable modular_updater.

enable_mojo_tracing
    Current value (from the default) = false
      From //mojo/public/cpp/bindings/BUILD.gn:11

enable_mojom_closure_compile
    Current value (from the default) = false
      From //mojo/public/tools/bindings/mojom.gni:43

    Enables Closure compilation of generated JS lite bindings. In environments
    where compilation is supported, any mojom target "foo" will also have a
    corresponding "foo_js_library_for_compile" target generated.

enable_mojom_fuzzer
    Current value (from the default) = false
      From //mojo/public/tools/bindings/mojom.gni:50

    Enables generating javascript fuzzing-related code and the bindings for the
    MojoLPM fuzzer targets. Off by default.

enable_mojom_message_id_scrambling
    Current value (from the default) = true
      From //mojo/public/tools/bindings/mojom.gni:38

    Controls message ID scrambling behavior. If |true|, message IDs are
    scrambled (i.e. randomized based on the contents of //chrome/VERSION) on
    non-Chrome OS desktop platforms. Set to |false| to disable message ID
    scrambling on all platforms.

enable_mojom_typemapping
    Current value (from the default) = true
      From //mojo/public/tools/bindings/mojom.gni:32

    Indicates whether typemapping should be supported in this build
    configuration. This may be disabled when building external projects which
    depend on //mojo but which do not need/want all of the Chromium tree
    dependencies that come with typemapping.
   
    Note that (perhaps obviously) a huge amount of Chromium code will not build
    with typemapping disabled, so it is never valid to set this to |false| in
    any Chromium build configuration.

enable_mse_mpeg2ts_stream_parser
    Current value (from the default) = false
      From //media/media_options.gni:72

enable_mutex_priority_inheritance
    Current value (from the default) = false
      From //base/BUILD.gn:75

    Set to true to enable mutex priority inheritance. See the comments in
    LockImpl::PriorityInheritanceAvailable() in lock_impl_posix.cc for the
    platform requirements to safely enable priority inheritance.

enable_nacl
    Current value (from the default) = true
      From //components/nacl/features.gni:17

enable_nacl_nonsfi
    Current value (from the default) = true
      From //components/nacl/features.gni:22

    Non-SFI is not yet supported on mipsel

enable_native_notifications
    Current value (from the default) = true
      From //chrome/common/features.gni:48

    Enables usage of the system-provided notification center.

enable_nocompile_tests
    Current value (from the default) = true
      From //build/nocompile.gni:67

    TODO(crbug.com/105388): make sure no-compile test is not flaky.

enable_oculus_vr
    Current value (from the default) = false
      From //device/vr/buildflags/buildflags.gni:24

    To build with Oculus support, the Oculus SDK for Windows will need to be
    installed in third_party/libovr/src.  See
    third_party/libovr/README.chromium for details.

enable_offline_pages
    Current value (from the default) = false
      From //components/offline_pages/buildflags/features.gni:8

    Whether to enable OfflinePages support. Currently user-visible features
    are Android-only.

enable_offline_pages_harness
    Current value (from the default) = false
      From //components/offline_pages/buildflags/features.gni:12

    This enables test API for locally-built harness which is used for quality
    evaluations. Requires setting this variable manually at local environment.

enable_one_click_signin
    Current value (from the default) = true
      From //chrome/common/features.gni:52

enable_openscreen
    Current value (from the default) = true
      From //chrome/browser/media/router/features.gni:11

    Exclude openscreen in NaCl, since there is no packet support
    in that build configuration. Once NaCl goes away, this check should be
    removed.

enable_openvr
    Current value (from the default) = false
      From //device/vr/buildflags/buildflags.gni:13

enable_openxr
    Current value (from the default) = false
      From //device/vr/buildflags/buildflags.gni:19

    To build with OpenXR support, the OpenXR Loader needs to be pulled to
    third_party/openxr.

enable_paint_preview
    Current value (from the default) = true
      From //build/config/buildflags_paint_preview.gni:15

    Enable basic paint preview support. Does not work on iOS or Fuchsia. Should
    not be included with Chromecast. Not ready for shipping builds yet so
    include in unofficial builds.
    Used by //components/paint_preview and //third_party/harfbuzz-ng.
    TODO(bug/webrtc:11223) Move back this file in //components/paint_preview/
        once WebRTC doesn't roll harfbuzz-ng anymore, for consistency sake.

enable_pdf
    Current value (from the default) = true
      From //pdf/features.gni:12

enable_perfetto_benchmarks
    Current value (from the default) = false
      From //third_party/perfetto/gn/perfetto.gni:186

enable_perfetto_fuzzers
    Current value (from the default) = false
      From //third_party/perfetto/gn/perfetto.gni:189

enable_perfetto_heapprofd
    Current value (from the default) = false
      From //third_party/perfetto/gn/perfetto.gni:150

enable_perfetto_integration_tests
    Current value (from the default) = false
      From //third_party/perfetto/gn/perfetto.gni:184

enable_perfetto_ipc
    Current value (from the default) = true
      From //third_party/perfetto/gn/perfetto.gni:142

    Allow the embedder to use the IPC layer. In turn this allows to use the
    system backend in the client library.
    This includes building things that rely on POSIX sockets, this places
    limitations on the supported operating systems.

enable_perfetto_platform_services
    Current value (from the default) = false
      From //third_party/perfetto/gn/perfetto.gni:136

enable_perfetto_stderr_crash_dump
    Current value (from the default) = false
      From //third_party/perfetto/gn/perfetto.gni:211

enable_perfetto_tools
    Current value (from the default) = false
      From //third_party/perfetto/gn/perfetto.gni:178

enable_perfetto_tools_trace_to_text
    Current value (from the default) = false
      From //third_party/perfetto/gn/perfetto.gni:252

enable_perfetto_trace_processor
    Current value (from the default) = true
      From //third_party/perfetto/gn/perfetto.gni:166

enable_perfetto_trace_processor_httpd
    Current value (from the default) = false
      From //third_party/perfetto/gn/perfetto.gni:241

enable_perfetto_trace_processor_json
    Current value (from the default) = true
      From //third_party/perfetto/gn/perfetto.gni:236

enable_perfetto_trace_processor_linenoise
    Current value (from the default) = false
      From //third_party/perfetto/gn/perfetto.gni:230

enable_perfetto_trace_processor_percentile
    Current value (from the default) = false
      From //third_party/perfetto/gn/perfetto.gni:226

enable_perfetto_trace_processor_sqlite
    Current value (from the default) = true
      From //third_party/perfetto/gn/perfetto.gni:221

enable_perfetto_traced_perf
    Current value (from the default) = false
      From //third_party/perfetto/gn/perfetto.gni:159

enable_perfetto_ui
    Current value (from the default) = false
      From //third_party/perfetto/gn/perfetto.gni:256

enable_perfetto_unittests
    Current value (from the default) = true
      From //third_party/perfetto/gn/perfetto.gni:180

enable_perfetto_version_gen
    Current value (from the default) = false
      From //third_party/perfetto/gn/perfetto.gni:195

enable_perfetto_watchdog
    Current value (from the default) = false
      From //third_party/perfetto/gn/perfetto.gni:174

enable_perfetto_zlib
    Current value (from the default) = true
      From //third_party/perfetto/gn/perfetto.gni:246

enable_platform_ac3_eac3_audio
    Current value (from the default) = false
      From //media/media_options.gni:67

    Enables AC3/EAC3 audio demuxing. This is enabled only on Chromecast, since
    it only provides demuxing, and is only useful for AC3/EAC3 audio
    pass-through to HDMI sink on Chromecast.

enable_platform_dolby_vision
    Current value (from the default) = false
      From //media/media_options.gni:81

    Enable Dolby Vision demuxing. Enable by default for Chromecast. Actual
    decoding must be provided by the platform. Note some Dolby Vision profiles
    which are encoded using HEVC require |enable_platform_hevc| to be enabled.

enable_platform_hevc
    Current value (from the default) = false
      From //media/media_options.gni:76

    Enable HEVC/H265 demuxing. Actual decoding must be provided by the
    platform. Enabled by default for Chromecast.

enable_platform_mpeg_h_audio
    Current value (from the default) = false
      From //media/media_options.gni:69

enable_plugins
    Current value (from the default) = true
      From //ppapi/buildflags/buildflags.gni:10

enable_precompiled_headers
    Current value (from the default) = true
      From //build/config/pch.gni:11

    Precompiled header file support is by default available,
    but for distributed build system uses (like goma) or when
    doing official builds.

enable_print_media_l10n
    Current value (from the default) = true
      From //components/printing/browser/BUILD.gn:14

    Enable print media localization only on the platforms that support CUPS IPP
    (ChromeOS and macOS for now). The localization expects media vendor IDs
    uniquely generated by CUPS IPP.

enable_print_preview
    Current value (from the default) = true
      From //printing/buildflags/buildflags.gni:18

    Enable printing with print preview. It implies enable_basic_printing.
    Note: It would be convenient to not repeat many of the same conditions in
    enable_basic_printing below. However, GN does not allow the use of
    enable_basic_printing within the same declare_args() block.

enable_profiling
    Current value (from the default) = false
      From //build/config/compiler/compiler.gni:49

    Compile in such a way as to enable profiling of the generated code. For
    example, don't omit the frame pointer and leave in symbols.

enable_qr_print
    Current value (from the default) = false
      From //chrome/common/qr_code_generator/BUILD.gn:7

    Enables building a development / debugging binary.

enable_random_mojo_delays
    Current value (from the default) = false
      From //mojo/public/cpp/bindings/BUILD.gn:17

    enable_random_mojo_delays starts a task runner that periodically pauses
    random Mojo bindings and later resumes them, in order to test whether parts
    of the code implicitly rely on FIFO processing of messages sent on different
    message pipes (which they should not).

enable_reading_list
    Current value (from the default) = true
      From //components/reading_list/features/reading_list.gni:8

    Controls whether reading list support is active or not. Currently only
    supported on iOS (on other platforms, the feature is always disabled).

enable_remoting
    Current value (from the default) = true
      From //remoting/remoting_enable.gni:12

enable_reporting
    Current value (from the default) = true
      From //net/features.gni:29

    Reporting not used on iOS.

enable_resource_whitelist_generation
    Current value (from the default) = false
      From //build/toolchain/gcc_toolchain.gni:27

enable_runtime_media_renderer_selection
    Current value (from the default) = false
      From //media/media_options.gni:161

    When enabled, this feature allows developers to use a runtime flag to
    choose the implementation of the renderer that is used. On a build which
    enables the mojo renderer, if --disable-mojo-renderer is passed at start-up,
    the "default" renderer will be used instead. Both renderer implementations
    will be linked if this feature is enabled, increasing the binary size. This
    feature does not make sense if the mojo renderer is not enabled.

enable_segment_heap
    Current value (from the default) = false
      From //build/config/win/manifest.gni:46

enable_service_discovery
    Current value (from the default) = true
      From //chrome/common/features.gni:54

enable_session_service
    Current value (from the default) = true
      From //chrome/common/features.gni:58

    Enables use of the session service, which is enabled by default.
    Android stores them separately on the Java side.

enable_skia_dawn_gtests
    Current value (from the default) = false
      From //skia/features.gni:13

    Enable gtests using SkiaRenderer Dawn.
    TODO(sgilhuly): Remove this and enable the tests by default once a software
    path for D3D12 is available.

enable_skia_wuffs_gif
    Current value (from the default) = false
      From //skia/BUILD.gn:37

enable_soda
    Current value (from the default) = false
      From //chrome/services/speech/buildflags.gni:6

enable_stripping
    Current value (from the default) = false
      From //build/config/mac/symbols.gni:24

    Strip symbols from linked targets by default. If this is enabled, the
    //build/config/mac:strip_all config will be applied to all linked targets.
    If custom stripping parameters are required, remove that config from a
    linked target and apply custom -Wcrl,strip flags. See
    //build/toolchain/mac/linker_driver.py for more information.

enable_supervised_users
    Current value (from the default) = false
      From //chrome/common/features.gni:60

enable_swiftshader
    Current value (from the default) = true
      From //ui/gl/features.gni:24

enable_swiftshader_vulkan
    Current value (from the default) = true
      From //gpu/vulkan/features.gni:16

    Enable swiftshader vulkan. Disabling it can save build time, however
    --use-vulkan=swiftshader and some tests which use swiftshader vulkan will
    not work.

enable_tab_search
    Current value (from the default) = false
      From //ui/webui/webui_features.gni:20

    Enable tab search only on a branded desktop build.
    In order to get commit queue coverage for C++ tests,
    this flag only gates the html/js webui resources, not the C++
    files

enable_tagged_pdf
    Current value (from the default) = true
      From //printing/buildflags/buildflags.gni:21

    Enable exporting to tagged PDF.

enable_trace_logging
    Current value (from the default) = false
      From //third_party/openscreen/src/util/BUILD.gn:11

    Enables trace logging in build. This is true by default, unless
    we are built against Chrome--we have no way to link their platform
    implementation into our binaries so trace logging is not possible.

enable_typescript_bindings
    Current value (from the default) = false
      From //mojo/public/tools/bindings/mojom.gni:46

    Enables generating Typescript bindings and compiling them to JS bindings.

enable_vr
    Current value (from the default) = false
      From //device/vr/buildflags/buildflags.gni:31

    Enable VR device support whenever VR device SDK(s) are supported.
    We enable VR on Linux even though VR features aren't usable because
    the binary size impact is small and allows many VR tests to run on Linux

enable_vulkan
    Current value (from the default) = false
      From //gpu/vulkan/features.gni:11

    Enable experimental vulkan backend.

enable_wayland_server
    Current value (from the default) = false
      From //chrome/common/features.gni:63

    Indicates if Wayland display server support is enabled.

enable_websockets
    Current value (from the default) = true
      From //net/features.gni:13

    WebSockets and socket stream code are not used on iOS and are optional in
    cronet.

enable_webui_tab_strip
    Current value (from the default) = false
      From //ui/webui/webui_features.gni:14

    Enable the WebUI version of the browser's tab strip.

enable_widevine
    Current value (from the default) = false
      From //third_party/widevine/cdm/widevine.gni:13

    Enables Widevine key system support. Enabled by default in Google Chrome,
    on Android and Fuchsia platforms.
    Can be optionally enabled in Chromium on non-Android platforms. Please see
    //src/third_party/widevine/LICENSE file for details.

enable_widevine_cdm_host_verification
    Current value (from the default) = false
      From //third_party/widevine/cdm/widevine.gni:58

enable_wifi_display
    Current value (from the default) = false
      From //extensions/buildflags/buildflags.gni:12

    Enables Wi-Fi Display functionality
    WARNING: This enables MPEG Transport Stream (MPEG-TS) encoding!

enable_windows_mr
    Current value (from the default) = false
      From //device/vr/buildflags/buildflags.gni:15

enable_wmax_tokens
    Current value (from the default) = false
      From //build/config/compiler/BUILD.gn:143

exclude_unwind_tables
    Current value (from the default) = false
      From //build/config/compiler/compiler.gni:98

    Exclude unwind tables by default for official builds as unwinding can be
    done from stack dumps produced by Crashpad at a later time "offline" in the
    crash server. Since this increases binary size, we don't recommend including
    them in shipping builds.
    For unofficial (e.g. development) builds and non-Chrome branded (e.g. Cronet
    which doesn't use Crashpad, crbug.com/479283) builds it's useful to be able
    to unwind at runtime.

fatal_linker_warnings
    Current value (from the default) = true
      From //build/config/compiler/BUILD.gn:64

    Enable fatal linker warnings. Building Chromium with certain versions
    of binutils can cause linker warning.

ffmpeg_branding
    Current value (from the default) = "Chromium"
      From //third_party/ffmpeg/ffmpeg_options.gni:34

    Controls whether we build the Chromium or Google Chrome version of FFmpeg.
    The Google Chrome version contains additional codecs. Typical values are
    Chromium, Chrome, and ChromeOS.

ffmpeg_use_atomics_fallback
    Current value (from the default) = false
      From //third_party/ffmpeg/ffmpeg_options.gni:51

    Set to true to force the use of ffmpeg's stdatomic fallback code.
   
    Windows and GCC prior to 4.9 lack stdatomic.h.
   
    This is also useful for developers who use icecc, which relies upon
    clang's -frewrite-includes flag which is broken with #include_next
    directives as used in chromium's clang stdatomic.h.
    Some background: https://bugs.llvm.org/show_bug.cgi?id=26828

fieldtrial_testing_like_official_build
    Current value (from the default) = false
      From //components/variations/service/BUILD.gn:14

    Set to true make a build that disables activation of field trial tests
    specified in testing/variations/fieldtrial_testing_config.json.
    Note: this setting is ignored if is_chrome_branded.
    TODO(thakis): It's strange this is called "_like_official_build" but then
    checks is_chrome_branded, not is_official_build.

forbid_non_component_debug_builds
    Current value (from the default) = true
      From //build/config/compiler/compiler.gni:89

    Whether an error should be raised on attempts to make debug builds with
    is_component_build=false. Very large debug symbols can have unwanted side
    effects so this is enforced by default for chromium.

force_build_standalone_receiver
    Current value (from the default) = false
      From //third_party/openscreen/src/BUILD.gn:13

    Set to true to force building the standalone receiver on Mac. It's currently
    disabled due to build bot struggles, but works fine on local, recent clang
    installations.
    TODO(crbug.com/openscreen/86): Remove when the Mac bots have been upgraded.

from_here_uses_location_builtins
    Current value (from the default) = true
      From //base/BUILD.gn:62

    Whether or not the FROM_HERE macro uses base::Location::Current(). This
    allows the implementation to be reverted if needed while validating its
    replacement base::Location::Current(). On by default in non-official builds
    for testing purposes.
    TODO(https://crbug.com/974061): remove this eventually.

gcc_target_rpath
    Current value (from the default) = ""
      From //build/config/gcc/BUILD.gn:19

    When non empty, overrides the target rpath value. This allows a user to
    make a Chromium build where binaries and shared libraries are meant to be
    installed into separate directories, like /usr/bin/chromium and
    /usr/lib/chromium for instance. It is useful when a build system that
    generates a whole target root filesystem (like Yocto) is used on top of gn,
    especially when cross-compiling.
    Note: this gn arg is similar to gyp target_rpath generator flag.

generate_linker_map
    Current value (from the default) = false
      From //build/toolchain/toolchain.gni:26

    Used for binary size analysis.

generate_order_files
    Current value (from the default) = false
      From //build/config/chrome_build.gni:13

    Turn this on to generate order files. See
    https://chromium.googlesource.com/chromium/src/+/master/docs/win_order_files.md

gold_path
    Current value (from the default) = ""
      From //build/config/compiler/BUILD.gn:60

    When we are going to use gold we need to find it.
    This is initialized below, after use_gold might have been overridden.

goma_dir
    Current value (from the default) = ""
      From //build/toolchain/goma.gni:17

    Absolute directory containing the gomacc binary.

google_api_key
    Current value (from the default) = ""
      From //google_apis/BUILD.gn:48

    Set these to bake the specified API keys and OAuth client
    IDs/secrets into your build.
   
    If you create a build without values baked in, you can instead
    set environment variables to provide the keys at runtime (see
    src/google_apis/google_api_keys.h for details).  Features that
    require server-side APIs may fail to work if no keys are
    provided.
   
    Note that if you are building an official build or if
    use_official_google_api_keys has been set to trie (explicitly or
    implicitly), these values will be ignored and the official
    keys will be used instead.

google_default_client_id
    Current value (from the default) = ""
      From //google_apis/BUILD.gn:51

    See google_api_key.

google_default_client_secret
    Current value (from the default) = ""
      From //google_apis/BUILD.gn:54

    See google_api_key.

gtest_enable_absl_printers
    Current value (from the default) = true
      From //build_overrides/build.gni:32

    Allows googletest to pretty-print various absl types.  Disabled for nacl due
    to lack of toolchain support.

gtk_version
    Current value (from the default) = 3
      From //build/config/linux/gtk/gtk.gni:12

    The (major) version of GTK to build against.

has_native_accessibility
    Current value (from the default) = true
      From //ui/base/ui_features.gni:12

    Whether the platform provides a native accessibility toolkit.

headless_fontconfig_utils
    Current value (from the default) = false
      From //headless/headless.gni:10

    Provide bindings for font loading for headless embedders.

headless_use_embedded_resources
    Current value (from the default) = false
      From //headless/headless.gni:7

    Embed resource.pak file into the binary for easier distribution.

host_byteorder
    Current value (from the default) = "undefined"
      From //build/config/host_byteorder.gni:9

host_cpu
    Current value (from the default) = "x64"
      (Internally set; try `gn help host_cpu`.)

host_os
    Current value (from the default) = "mac"
      (Internally set; try `gn help host_os`.)

host_pkg_config
    Current value (from the default) = ""
      From //build/config/linux/pkg_config.gni:36

    A optional pkg-config wrapper to use for tools built on the host.

host_toolchain
    Current value (from the default) = ""
      From //build/config/BUILDCONFIG.gn:148

    This should not normally be set as a build argument.  It's here so that
    every toolchain can pass through the "global" value via toolchain_args().

icu_disable_thin_archive
    Current value (from the default) = false
      From //third_party/icu/config.gni:11

    If true, compile icu into a standalone static library. Currently this is
    only useful on Chrome OS.

icu_use_data_file
    Current value (from the default) = true
      From //third_party/icu/config.gni:8

    Tells icu to load an external data file rather than rely on the icudata
    being linked directly into the binary.

ignore_elf32_limitations
    Current value (from the default) = false
      From //build_overrides/build.gni:53

    Android 32-bit non-component, non-clang builds cannot have symbol_level=2
    due to 4GiB file size limit, see https://crbug.com/648948.
    Set this flag to true to skip the assertion.

include_transport_security_state_preload_list
    Current value (from the default) = true
      From //net/features.gni:37

    Includes the transport security state preload list. This list includes
    mechanisms (e.g. HSTS, HPKP) to enforce trusted connections to a significant
    set of hardcoded domains. While this list has a several hundred KB of binary
    size footprint, this flag should not be disabled unless the embedder is
    willing to take the responsibility to make sure that all important
    connections use HTTPS.

include_vr_data
    Current value (from the default) = false
      From //device/vr/buildflags/buildflags.gni:37

    Whether to include VR extras like test APKs in non-VR-specific targets

init_stack_vars
    Current value (from the default) = true
      From //build/config/compiler/BUILD.gn:128

    Initialize all local variables with a pattern. This flag will fill
    uninitialized floating-point types (and 32-bit pointers) with 0xFF and the
    rest with 0xAA. This makes behavior of uninitialized memory bugs consistent,
    recognizeble in debugger, and crashes memory accesses by uninitialized
    pointers.
    TODO(vitalybuka):
    'is_android' breaks content_shell_test_apk on android-kitkat-arm-rel.
    'use_xcode_clang' may call old clang.

internal_gles2_conform_tests
    Current value (from the default) = false
      From //gpu/gles2_conform_support/BUILD.gn:7

    Set to true to compile with the OpenGL ES 2.0 conformance tests.

internal_khronos_glcts_tests
    Current value (from the default) = false
      From //gpu/khronos_glcts_support/BUILD.gn:8

invert_fieldtrials
    Current value (from the default) = false
      From //components/variations/field_trial_config/BUILD.gn:6

ios_deployment_target
    Current value (from the default) = "12.0"
      From //build/config/ios/ios_sdk_overrides.gni:10

    Version of iOS that we're targeting.

ios_use_goma_rbe
    Current value (from the default) = false
      From //build/toolchain/goma.gni:30

    Auto-configure for Goma RBE backend.
    TODO(crbug.com/1015730): true if use_goma = true in the future.

is_asan
    Current value (from the default) = false
      From //build/config/sanitizers/sanitizers.gni:13

    Compile for Address Sanitizer to find memory bugs.

is_cast_audio_only
    Current value (from the default) = false
      From //build/config/chromecast_build.gni:23

    Set this true for an audio-only Chromecast build.

is_cast_desktop_build
    Current value (from the default) = false
      From //build/config/chromecast_build.gni:42

    True if Chromecast build is targeted for linux desktop. This type of build
    is useful for testing and development, but currently supports only a subset
    of Cast functionality. Though this defaults to true for x86 Linux devices,
    this should be overriden manually for an embedded x86 build.
    TODO(slan): Remove instances of this when x86 is a fully supported platform.

is_cfi
    Current value (from the default) = false
      From //build/config/sanitizers/sanitizers.gni:58

    Compile with Control Flow Integrity to protect virtual calls and casts.
    See http://clang.llvm.org/docs/ControlFlowIntegrity.html
   
    TODO(pcc): Remove this flag if/when CFI is enabled in all official builds.
   
    Disable this on linux-chromeos to avoid using ThinLTO there;
    crbug.com/1033839. Similarly, don't use this on ARC builds.

is_cfm
    Current value (from the default) = false
      From //chromeos/services/cfm/public/buildflags/buildflags.gni:7

    True if compiling for Chromebox for Meeting devices.

is_chrome_branded
    Current value (from the default) = false
      From //build/config/chrome_build.gni:9

    Select the desired branding flavor. False means normal Chromium branding,
    true means official Google Chrome branding (requires extra Google-internal
    resources).

is_chromecast
    Current value (from the default) = false
      From //build/config/chromecast_build.gni:11

    Set this true for a Chromecast build. Chromecast builds are supported on
    Linux and Android.

is_chromeos_device
    Current value (from the default) = false
      From //build/config/chromeos/args.gni:26

    Determines if we're building for a Chrome OS device (or VM) and not just
    linux-chromeos. NOTE: Most test targets in Chrome expect to run under
    linux-chromeos, so some have compile-time asserts that intentionally fail
    when this build flag is set. Build and run the tests for linux-chromeos
    instead.
    https://chromium.googlesource.com/chromium/src/+/master/docs/chromeos_build_instructions.md
    https://chromium.googlesource.com/chromiumos/docs/+/master/simple_chrome_workflow.md

is_clang
    Current value (from the default) = true
      From //build/config/BUILDCONFIG.gn:137

    Set to true when compiling with the Clang compiler.

is_component_build
    Current value (from the default) = true
      From //build/config/BUILDCONFIG.gn:165

    Component build. Setting to true compiles targets declared as "components"
    as shared libraries loaded dynamically. This speeds up development time.
    When false, components will be linked statically.
   
    For more information see
    https://chromium.googlesource.com/chromium/src/+/master/docs/component_build.md

is_component_ffmpeg
    Current value (from the default) = true
      From //third_party/ffmpeg/ffmpeg_options.gni:41

    Set true to build ffmpeg as a shared library. NOTE: this means we should
    always consult is_component_ffmpeg instead of is_component_build for
    ffmpeg targets. This helps linux chromium packagers that swap out our
    ffmpeg.so with their own. See discussion here
    https://groups.google.com/a/chromium.org/forum/#!msg/chromium-packagers/R5rcZXWxBEQ/B6k0zzmJbvcJ

is_ct_supported
    Current value (from the default) = true
      From //services/network/public/cpp/features.gni:10

    Certificate transparency is not supported on iOS.
    TODO(mmenke): It's actually not supported on Android, either.

is_debug
    Current value (from the default) = true
      From //build/config/BUILDCONFIG.gn:155

    Debug build. Enabling official builds automatically sets is_debug to false.

is_desktop_linux
    Current value (from the default) = false
      From //build/config/BUILDCONFIG.gn:134

    Whether we're a traditional desktop unix.

is_ggp
    Current value (from the default) = false
      From //third_party/angle/gni/angle.gni:8

is_hwasan
    Current value (from the default) = false
      From //build/config/sanitizers/sanitizers.gni:18

    Compile for Hardware-Assisted Address Sanitizer to find memory bugs
    (android/arm64 only).
    See http://clang.llvm.org/docs/HardwareAssistedAddressSanitizerDesign.html

is_lsan
    Current value (from the default) = false
      From //build/config/sanitizers/sanitizers.gni:21

    Compile for Leak Sanitizer to find leaks.

is_msan
    Current value (from the default) = false
      From //build/config/sanitizers/sanitizers.gni:24

    Compile for Memory Sanitizer to find uninitialized reads.

is_nacl_glibc
    Current value (from the default) = false
      From //build/config/nacl/config.gni:9

    Native Client supports both Newlib and Glibc C libraries where Newlib
    is assumed to be the default one; use this to determine whether Glibc
    is being used instead.

is_official_build
    Current value (from the default) = false
      From //build/config/BUILDCONFIG.gn:131

    Set to enable the official build level of optimization. This has nothing
    to do with branding, but enables an additional level of optimization above
    release (!is_debug). This might be better expressed as a tri-state
    (debug, release, official) but for historical reasons there are two
    separate flags.

is_perfetto_build_generator
    Current value (from the default) = false
      From //third_party/perfetto/gn/perfetto.gni:82

    All the tools/gen_* scripts set this to true. This is mainly used to locate
    .gni files from //gn rather than //build.

is_perfetto_embedder
    Current value (from the default) = false
      From //third_party/perfetto/gn/perfetto.gni:87

    This is for override via `gn args` (e.g. for tools/gen_xxx). Embedders
    based on GN (e.g. v8) should NOT set this and instead directly sets
    perfetto_build_with_embedder=true in their GN files.

is_tsan
    Current value (from the default) = false
      From //build/config/sanitizers/sanitizers.gni:27

    Compile for Thread Sanitizer to find threading bugs.

is_ubsan
    Current value (from the default) = false
      From //build/config/sanitizers/sanitizers.gni:31

    Compile for Undefined Behaviour Sanitizer to find various types of
    undefined behaviour (excludes vptr checks).

is_ubsan_no_recover
    Current value (from the default) = false
      From //build/config/sanitizers/sanitizers.gni:34

    Halt the program if a problem is detected.

is_ubsan_null
    Current value (from the default) = false
      From //build/config/sanitizers/sanitizers.gni:37

    Compile for Undefined Behaviour Sanitizer's null pointer checks.

is_ubsan_security
    Current value (from the default) = false
      From //build/config/sanitizers/sanitizers.gni:87

    Enables core ubsan security features. Will later be removed once it matches
    is_ubsan.

is_ubsan_vptr
    Current value (from the default) = false
      From //build/config/sanitizers/sanitizers.gni:40

    Compile for Undefined Behaviour Sanitizer's vptr checks.

is_unsafe_developer_build
    Current value (from the default) = true
      From //base/BUILD.gn:67

    Unsafe developer build. Has developer-friendly features that may weaken or
    disable security measures like sandboxing or ASLR.
    IMPORTANT: Unsafe developer builds should never be distributed to end users.

is_win_arm64
    Current value (from the default) = false
      From //third_party/angle/gni/angle.gni:90

    Currently Windows on Arm doesn't support OpenGL or Vulkan.

ldso_path
    Current value (from the default) = ""
      From //build/config/gcc/BUILD.gn:20

libcxx_abi_unstable
    Current value (from the default) = false
      From //build/config/c++/BUILD.gn:18

    lldb pretty printing only works when libc++ is built in the __1 (or __ndk1)
    namespaces.  For pretty printing to work out-of-the-box on Mac (where lldb
    is primarily used), this flag is set to false to build with the __1
    namespace (to maintain ABI compatibility, this implies building without
    _LIBCPP_ABI_UNSTABLE).  This is not necessary on non-component builds
    because we leave the ABI version set to __1 in that case because libc++
    symbols are not exported.
    TODO(thomasanderson): Set this to true by default once rL352899 is available
    in MacOS's lldb.

libcxx_is_shared
    Current value (from the default) = true
      From //build/config/c++/c++.gni:55

    WARNING: Setting this to a non-default value is highly discouraged.
    If true, libc++ will be built as a shared library; otherwise libc++ will be
    linked statically. Setting this to something other than the default is
    unsupported and can be broken by libc++ rolls. Note that if this is set to
    true, you must also set libcxx_abi_unstable=false, which is bad for
    performance and memory use.

libcxx_natvis_include
    Current value (from the default) = true
      From //build/config/c++/c++.gni:30

    Builds libcxx Natvis into the symbols for type visualization.
    Set to false to workaround http://crbug.com/966676 and
    http://crbug.com/966687.

libcxx_svn_revision
    Current value (from the default) = "375504"
      From //buildtools/deps_revisions.gni:8

    The libc++ svn revision that belongs to the git hash in DEPS. Used to cause
    full rebuilds on libc++ rolls.

libyuv_disable_jpeg
    Current value (from the default) = false
      From //third_party/libyuv/libyuv.gni:15

libyuv_include_tests
    Current value (from the default) = false
      From //third_party/libyuv/libyuv.gni:14

libyuv_symbols_visible
    Current value (from the default) = false
      From //third_party/libyuv/BUILD.gn:19

    When building a shared library using a target in WebRTC or
    Chromium projects that depends on libyuv, setting this flag
    to true makes libyuv symbols visible inside that library.

libyuv_use_gflags
    Current value (from the default) = true
      From //third_party/libyuv/BUILD.gn:14

    Set to false to disable building with gflags.

libyuv_use_mmi
    Current value (from the default) = false
      From //third_party/libyuv/libyuv.gni:22

libyuv_use_msa
    Current value (from the default) = false
      From //third_party/libyuv/libyuv.gni:20

libyuv_use_neon
    Current value (from the default) = false
      From //third_party/libyuv/libyuv.gni:17

link_pulseaudio
    Current value (from the default) = false
      From //media/media_options.gni:44

    Allows distributions to link pulseaudio directly (DT_NEEDED) instead of
    using dlopen. This helps with automated detection of ABI mismatches and
    prevents silent errors.

llvm_force_head_revision
    Current value (from the default) = false
      From //build/toolchain/toolchain.gni:18

    If this is set to true, or if LLVM_FORCE_HEAD_REVISION is set to 1
    in the environment, we use the revision in the llvm repo to determine
    the CLANG_REVISION to use, instead of the version hard-coded into
    //tools/clang/scripts/update.py. This should only be used in
    conjunction with setting LLVM_FORCE_HEAD_REVISION in the
    environment when `gclient runhooks` is run as well.

mac_allow_system_xcode_for_official_builds_for_testing
    Current value (from the default) = false
      From //build/config/mac/mac_sdk.gni:45

    Production builds should use hermetic Xcode. If you want to do production
    builds with system Xcode to test new SDKs, set this.
    Don't set this on any bots.

mac_deployment_target
    Current value (from the default) = "10.10.0"
      From //build/config/mac/mac_sdk.gni:19

    The MACOSX_DEPLOYMENT_TARGET variable used when compiling. This partially
    controls the minimum supported version of macOS for Chromium by
    affecting the symbol availability rules. This may differ from
    mac_min_system_version when dropping support for older macOSes but where
    additional code changes are required to be compliant with the availability
    rules.
    Must be of the form x.x.x for Info.plist files.

mac_deterministic_build
    Current value (from the default) = false
      From //build/toolchain/mac/BUILD.gn:35

    This makes the linker set timestamps in Mach-O files to 0. This isn't
    enabled by default because this breaks Xcode's lldb. This has been fixed in
    https://reviews.llvm.org/rL368199 but that has not yet made it into a public
    lldb release.

mac_min_system_version
    Current value (from the default) = "10.10.0"
      From //build/config/mac/mac_sdk.gni:27

    The value of the LSMinimmumSystemVersion in Info.plist files. This partially
    controls the minimum supported version of macOS for Chromium by
    affecting the Info.plist. This may differ from mac_deployment_target when
    dropping support for older macOSes. This should be greater than or equal to
    the mac_deployment_target version.
    Must be of the form x.x.x for Info.plist files.

mac_sdk_min
    Current value (from the default) = "10.15"
      From //build/config/mac/mac_sdk_overrides.gni:12

mac_sdk_name
    Current value (from the default) = "macosx"
      From //build/config/mac/mac_sdk.gni:35

    The SDK name as accepted by xcodebuild.

mac_sdk_official_version
    Current value (from the default) = "10.15"
      From //build/config/mac/mac_sdk.gni:40

    The SDK version used when making official builds. This is a single exact
    version, not a minimum. If this version isn't available official builds
    will fail.

mac_sdk_path
    Current value (from the default) = ""
      From //build/config/mac/mac_sdk.gni:32

    Path to a specific version of the Mac SDK, not including a slash at the end.
    If empty, the path to the lowest version greater than or equal to
    mac_sdk_min is used.

max_jobs_per_link
    Current value (from the default) = 8
      From //build/config/compiler/compiler.gni:77

    Limit the number of jobs (threads/processes) the linker is allowed
    to use (for linkers that support this).

media_use_ffmpeg
    Current value (from the default) = true
      From //media/media_options.gni:49

    Enable usage of FFmpeg within the media library. Used for most software
    based decoding, demuxing, and sometimes optimized FFTs. If disabled,
    implementors must provide their own demuxers and decoders.

media_use_libvpx
    Current value (from the default) = true
      From //media/media_options.gni:53

    Enable usage of libvpx within the media library. Used for software based
    decoding of VP9 and VP8A type content.

mips_use_mmi
    Current value (from the default) = false
      From //build/config/mips.gni:13

    MIPS MultiMedia Instruction compilation flag.

mojo_media_host
    Current value (from the default) = "gpu"
      From //media/media_options.gni:235

    The process that the mojo MediaService runs in. By default, all services
    registered in |mojo_media_services| are hosted in the MediaService, with the
    exception that when |enable_library_cdms| is true, the "cdm" service will
    run in a separate CdmService in the CDM (utility) process, while other
    |mojo_media_services| still run in the MediaService in the process specified
    by "mojo_media_host".
    Valid options are:
    - "browser": Use mojo media service hosted in the browser process.
    - "gpu": Use mojo media service hosted in the gpu process.
    - "utility": Use mojo media service hosted in the utility process.
    - "": Do not use mojo media service.

mojo_media_services
    Current value (from the default) = ["video_decoder", "cdm"]
      From //media/media_options.gni:222

    A list of mojo media services that should be used in the media pipeline.
    Valid entries in the list are:
    - "renderer": Use mojo-based media Renderer service.
    - "cdm": Use mojo-based Content Decryption Module.
    - "audio_decoder": Use mojo-based audio decoder in the default media
                       Renderer. Cannot be used with the mojo Renderer above.
    - "video_decoder": Use mojo-based video decoder in the default media
                       Renderer. Cannot be used with the mojo Renderer above.

mojom_message_id_salt_path
    Current value (from the default) = "//chrome/VERSION"
      From //mojo/public/tools/bindings/mojom.gni:110

    The path to a file whose contents can be used as the basis for a message
    ID scrambling salt.

mojom_message_id_salt_suffix_path
    Current value (from the default) = ""
      From //mojo/public/tools/bindings/mojom.gni:120

monolithic_binaries
    Current value (from the default) = false
      From //third_party/perfetto/gn/perfetto.gni:200

    Only for local development. When true the binaries (perfetto, traced, ...)
    are monolithic and don't use a common shared library. This is mainly to
    avoid LD_LIBRARY_PATH dances when testing locally.

msan_track_origins
    Current value (from the default) = 2
      From //build/config/sanitizers/sanitizers.gni:45

    Track where uninitialized memory originates from. From fastest to slowest:
    0 - no tracking, 1 - track only the initial allocation site, 2 - track the
    chain of stores leading from allocation site to use site.

nacl_sdk_untrusted
    Current value (from the default) = false
      From //native_client_sdk/src/BUILD.gn:14

    Build the nacl SDK untrusted components.  This is disabled by default since
    not all NaCl untrusted compilers are in goma (e.g arm-nacl-glibc)

ndk_api_level_at_least_26
    Current value (from the default) = false
      From //third_party/angle/gni/angle.gni:69

needs_gomacc_path_arg
    Current value (from the default) = false
      From //build/toolchain/goma.gni:14

    This flag is for ChromeOS compiler wrapper.
    By passing gomacc path via cmd-line arg, ChromeOS' compiler wrapper
    invokes gomacc inside it.

optimize_for_fuzzing
    Current value (from the default) = false
      From //build/config/sanitizers/sanitizers.gni:95

    Optimize for coverage guided fuzzing (balance between speed and number of
    branches). Can be also used to remove non-determinism and other issues.

optimize_webui
    Current value (from the default) = false
      From //ui/webui/webui_features.gni:11

    Optimize parts of Chrome's UI written with web technologies (HTML/CSS/JS)
    for runtime performance purposes. This does more work at compile time for
    speed benefits at runtime (so we skip in debug builds).

ozone_auto_platforms
    Current value (from the default) = false
      From //ui/ozone/ozone.gni:16

    Select platforms automatically. Turn this off for manual control.

ozone_extra_path
    Current value (from the default) = "//ui/ozone/ozone_extra.gni"
      From //ui/ozone/ozone.gni:13

    Ozone extra platforms file path. Can be overridden to build out of
    tree ozone platforms.

ozone_platform
    Current value (from the default) = ""
      From //ui/ozone/ozone.gni:22

    The platform that will used at runtime by default. This can be overridden
    with the command line flag --ozone-platform=<platform>.

ozone_platform_cast
    Current value (from the default) = false
      From //ui/ozone/ozone.gni:25

    Compile the 'cast' platform.

ozone_platform_gbm
    Current value (from the default) = false
      From //ui/ozone/ozone.gni:28

    Compile the 'gbm' platform.

ozone_platform_headless
    Current value (from the default) = false
      From //ui/ozone/ozone.gni:31

    Compile the 'headless' platform.

ozone_platform_scenic
    Current value (from the default) = false
      From //ui/ozone/ozone.gni:34

    Compile the 'scenic' platform.

ozone_platform_wayland
    Current value (from the default) = false
      From //ui/ozone/ozone.gni:40

    Compile the 'wayland' platform.

ozone_platform_windows
    Current value (from the default) = false
      From //ui/ozone/ozone.gni:43

    Compile the 'windows' platform.

ozone_platform_x11
    Current value (from the default) = false
      From //ui/ozone/ozone.gni:37

    Compile the 'x11' platform.

pdf_bundle_freetype
    Current value (from the default) = false
      From //third_party/pdfium/pdfium.gni:16

    Build PDFium either:
    1) When set to true, with a bundled FreeType, built from FreeType source
       code in //third_party/freetype and PDFium's FreeType configs in
       third_party/freetype/include.
    2) When set to false, use whatever FreeType target is defined in
       //build/config/freetype.

pdf_enable_click_logging
    Current value (from the default) = false
      From //third_party/pdfium/pdfium.gni:19

    Generate logging messages for click events that reach PDFium

pdf_enable_v8
    Current value (from the default) = true
      From //third_party/pdfium/pdfium.gni:22

    Build PDFium either with or without v8 support.

pdf_enable_xfa
    Current value (from the default) = false
      From //third_party/pdfium/pdfium.gni:25

    Build PDFium either with or without XFA Forms support.

pdf_enable_xfa_bmp
    Current value (from the default) = true
      From //third_party/pdfium/pdfium.gni:28

    If XFA, also support bmp codec. Ignored if not XFA.

pdf_enable_xfa_gif
    Current value (from the default) = true
      From //third_party/pdfium/pdfium.gni:31

    If XFA, also support gif codec. Ignored if not XFA.

pdf_enable_xfa_png
    Current value (from the default) = true
      From //third_party/pdfium/pdfium.gni:34

    If XFA, also support png codec. Ignored if not XFA.

pdf_enable_xfa_tiff
    Current value (from the default) = true
      From //third_party/pdfium/pdfium.gni:37

    If XFA, also support tiff codec. Ignored if not XFA.

pdf_is_complete_lib
    Current value (from the default) = false
      From //third_party/pdfium/pdfium.gni:54

    Build a complete static library

pdf_is_standalone
    Current value (from the default) = false
      From //third_party/pdfium/pdfium.gni:51

    Build PDFium standalone

pdf_use_skia
    Current value (from the default) = false
      From //third_party/pdfium/pdfium.gni:41

    Build PDFium against Skia (experimental) rather than AGG. Use Skia to draw
    everything.

pdf_use_skia_paths
    Current value (from the default) = false
      From //third_party/pdfium/pdfium.gni:45

    Build PDFium against Skia (experimental) rather than AGG. Use Skia to draw
    paths.

pdf_use_win32_gdi
    Current value (from the default) = true
      From //third_party/pdfium/pdfium.gni:48

    Build PDFium with or without experimental win32 GDI APIs.

perfetto_build_with_android
    Current value (from the default) = false
      From //third_party/perfetto/gn/perfetto.gni:78

    The Android blueprint file generator set this to true (as well as
    is_perfetto_build_generator). This is just about being built in the
    Android tree (AOSP and internal) and is NOT related with the target OS.
    In standalone Android builds and Chromium Android builds, this is false.

perfetto_force_dlog
    Current value (from the default) = "off"
      From //third_party/perfetto/gn/perfetto.gni:205

    Whether DLOG should be enabled on debug builds (""), all builds ("on"), or
    none ("off"). We disable it by default for embedders to avoid spamming their
    console.

perfetto_use_system_protobuf
    Current value (from the default) = false
      From //third_party/perfetto/gn/perfetto.gni:263

    Used by CrOS system builds. Uses the system version of protobuf
    from /usr/include instead of the hermetic one.

perfetto_verbose_logs_enabled
    Current value (from the default) = false
      From //third_party/perfetto/gn/perfetto.gni:217

pgo_build
    Current value (from the default) = false
      From //chrome/common/features.gni:66

    Indicates if the build is using PGO.

pgo_data_path
    Current value (from the default) = ""
      From //build/config/compiler/pgo/pgo.gni:17

    When using chrome_pgo_phase = 2, read profile data from this path.

pkg_config
    Current value (from the default) = ""
      From //build/config/linux/pkg_config.gni:33

    A pkg-config wrapper to call instead of trying to find and call the right
    pkg-config directly. Wrappers like this are common in cross-compilation
    environments.
    Leaving it blank defaults to searching PATH for 'pkg-config' and relying on
    the sysroot mechanism to find the right .pc files.

proprietary_codecs
    Current value (from the default) = false
      From //build/config/features.gni:26

    Enables proprietary codecs and demuxers; e.g. H264, AAC, MP3, and MP4.
    We always build Google Chrome and Chromecast with proprietary codecs.
   
    Note: this flag is used by WebRTC which is DEPSed into Chrome. Moving it
    out of //build will require using the build_overrides directory.

root_extra_deps
    Current value (from the default) = []
      From //BUILD.gn:43

    A list of extra dependencies to add to the root target. This allows a
    checkout to add additional targets without explicitly changing any checked-
    in files.

rtc_audio_device_plays_sinus_tone
    Current value (from the default) = false
      From //third_party/webrtc/webrtc.gni:169

    When set to true, replace the audio output with a sinus tone at 440Hz.
    The ADM will ask for audio data from WebRTC but instead of reading real
    audio samples from NetEQ, a sinus tone will be generated and replace the
    real audio samples.

rtc_build_examples
    Current value (from the default) = true
      From //third_party/webrtc/webrtc.gni:106

    Set this to false to skip building examples.

rtc_build_json
    Current value (from the default) = true
      From //third_party/webrtc/webrtc.gni:216

    Disable these to not build components which can be externally provided.

rtc_build_libevent
    Current value (from the default) = false
      From //third_party/webrtc/webrtc.gni:228

rtc_build_libsrtp
    Current value (from the default) = true
      From //third_party/webrtc/webrtc.gni:217

rtc_build_libvpx
    Current value (from the default) = true
      From //third_party/webrtc/webrtc.gni:218

rtc_build_opus
    Current value (from the default) = true
      From //third_party/webrtc/webrtc.gni:220

rtc_build_ssl
    Current value (from the default) = true
      From //third_party/webrtc/webrtc.gni:221

rtc_build_tools
    Current value (from the default) = true
      From //third_party/webrtc/webrtc.gni:109

    Set this to false to skip building tools.

rtc_build_usrsctp
    Current value (from the default) = true
      From //third_party/webrtc/webrtc.gni:222

rtc_build_with_neon
    Current value (from the default) = false
      From //third_party/webrtc/webrtc.gni:143

rtc_builtin_ssl_root_certificates
    Current value (from the default) = true
      From //third_party/webrtc/webrtc.gni:65

    Setting this to false will require the API user to pass in their own
    SSLCertificateVerifier to verify the certificates presented from a
    TLS-TURN server. In return disabling this saves around 100kb in the binary.

rtc_disable_check_msg
    Current value (from the default) = false
      From //third_party/webrtc/webrtc.gni:264

    Set this to true to disable detailed error message and logging for
    RTC_CHECKs.

rtc_disable_logging
    Current value (from the default) = false
      From //third_party/webrtc/webrtc.gni:257

    Set this to true to fully remove logging from WebRTC.

rtc_disable_metrics
    Current value (from the default) = false
      From //third_party/webrtc/webrtc.gni:267

    Set this to true to disable webrtc metrics.

rtc_disable_trace_events
    Current value (from the default) = false
      From //third_party/webrtc/webrtc.gni:260

    Set this to true to disable trace events.

rtc_enable_android_aaudio
    Current value (from the default) = false
      From //third_party/webrtc/webrtc.gni:128

    Enable use of Android AAudio which requires Android SDK 26 or above and
    NDK r16 or above.

rtc_enable_avx2
    Current value (from the default) = false
      From //third_party/webrtc/webrtc.gni:247

    Set this to true to enable the avx2 support in webrtc.
    TODO(bugs.webrtc.org/11663): Default this to true and eventually remove.

rtc_enable_bwe_test_logging
    Current value (from the default) = false
      From //third_party/webrtc/webrtc.gni:103

    Set this to true to enable BWE test logging.

rtc_enable_external_auth
    Current value (from the default) = true
      From //third_party/webrtc/webrtc.gni:93

    Enable when an external authentication mechanism is used for performing
    packet authentication for RTP packets instead of libsrtp.

rtc_enable_libevent
    Current value (from the default) = false
      From //third_party/webrtc/webrtc.gni:227

rtc_enable_protobuf
    Current value (from the default) = true
      From //third_party/webrtc/webrtc.gni:210

    Enables the use of protocol buffers for debug recordings.

rtc_enable_sctp
    Current value (from the default) = true
      From //third_party/webrtc/webrtc.gni:213

    Set this to disable building with support for SCTP data channels.

rtc_enable_symbol_export
    Current value (from the default) = false
      From //third_party/webrtc/webrtc.gni:41

    Setting this to true will make RTC_EXPORT (see rtc_base/system/rtc_export.h)
    expand to code that will manage symbols visibility.

rtc_exclude_audio_processing_module
    Current value (from the default) = false
      From //third_party/webrtc/webrtc.gni:100

    Selects whether the audio processing module should be excluded.

rtc_exclude_field_trial_default
    Current value (from the default) = true
      From //third_party/webrtc/webrtc.gni:51

    When WebRTC is built as part of Chromium it should exclude the default
    implementation of field_trial unless it is building for NACL or
    Chromecast.

rtc_exclude_metrics_default
    Current value (from the default) = true
      From //third_party/webrtc/webrtc.gni:60

    Setting this to true will define WEBRTC_EXCLUDE_METRICS_DEFAULT which
    will tell the pre-processor to remove the default definition of symbols
    needed to use metrics. In that case a new implementation needs to be
    provided.

rtc_exclude_transient_suppressor
    Current value (from the default) = false
      From //third_party/webrtc/webrtc.gni:271

    Set this to true to exclude the transient suppressor in the audio processing
    module from the build.

rtc_include_builtin_audio_codecs
    Current value (from the default) = true
      From //third_party/webrtc/webrtc.gni:184

    When set to false, builtin audio encoder/decoder factories and all the
    audio codecs they depend on will not be included in libwebrtc.{a|lib}
    (they will still be included in libjingle_peerconnection_so.so and
    WebRTC.framework)

rtc_include_builtin_video_codecs
    Current value (from the default) = true
      From //third_party/webrtc/webrtc.gni:190

    When set to false, builtin video encoder/decoder factories and all the
    video codecs they depends on will not be included in libwebrtc.{a|lib}
    (they will still be included in libjingle_peerconnection_so.so and
    WebRTC.framework)

rtc_include_ilbc
    Current value = false
      From //.gn:47
    Overridden from the default = true
      From //third_party/webrtc/webrtc.gni:68

    Include the iLBC audio codec?

rtc_include_internal_audio_device
    Current value (from the default) = false
      From //third_party/webrtc/webrtc.gni:243

    Chromium uses its own IO handling, so the internal ADM is only built for
    standalone WebRTC.

rtc_include_opus
    Current value (from the default) = true
      From //third_party/webrtc/webrtc.gni:71

    Disable this to avoid building the Opus audio codec.

rtc_include_pulse_audio
    Current value (from the default) = false
      From //third_party/webrtc/webrtc.gni:239

    Excluded in Chromium since its prerequisites don't require Pulse Audio.

rtc_include_tests
    Current value (from the default) = false
      From //third_party/webrtc/webrtc.gni:250

    Include tests in standalone checkout.

rtc_jsoncpp_root
    Current value (from the default) = "//third_party/jsoncpp/source/include"
      From //third_party/webrtc/webrtc.gni:82

    Used to specify an external Jsoncpp include path when not compiling the
    library that comes with WebRTC (i.e. rtc_build_json == 0).

rtc_libvpx_build_vp9
    Current value (from the default) = true
      From //third_party/webrtc/webrtc.gni:219

rtc_link_pipewire
    Current value (from the default) = false
      From //third_party/webrtc/webrtc.gni:121

    Set this to link PipeWire directly instead of using the dlopen.

rtc_opus_support_120ms_ptime
    Current value (from the default) = true
      From //third_party/webrtc/webrtc.gni:75

    Enable this if the Opus version upon which WebRTC is built supports direct
    encoding of 120 ms packets.

rtc_opus_variable_complexity
    Current value (from the default) = false
      From //third_party/webrtc/webrtc.gni:78

    Enable this to let the Opus audio codec change complexity on the fly.

rtc_prefer_fixed_point
    Current value (from the default) = false
      From //third_party/webrtc/webrtc.gni:89

    Selects fixed-point code where possible.

rtc_sanitize_coverage
    Current value (from the default) = ""
      From //third_party/webrtc/webrtc.gni:135

    Set to "func", "block", "edge" for coverage generation.
    At unit test runtime set UBSAN_OPTIONS="coverage=1".
    It is recommend to set include_examples=0.
    Use llvm's sancov -html-report for human readable reports.
    See http://clang.llvm.org/docs/SanitizerCoverage.html .

rtc_ssl_root
    Current value (from the default) = ""
      From //third_party/webrtc/webrtc.gni:86

    Used to specify an external OpenSSL include path when not compiling the
    library that comes with WebRTC (i.e. rtc_build_ssl == 0).

rtc_use_absl_mutex
    Current value (from the default) = false
      From //third_party/webrtc/webrtc.gni:159

    Enable this flag to make webrtc::Mutex be implemented by absl::Mutex.

rtc_use_dummy_audio_file_devices
    Current value (from the default) = false
      From //third_party/webrtc/webrtc.gni:163

    By default, use normal platform audio support or dummy audio, but don't
    use file-based audio playout and record.

rtc_use_gtk
    Current value (from the default) = false
      From //third_party/webrtc/webrtc.gni:236

    Build sources requiring GTK. NOTICE: This is not present in Chrome OS
    build environments, even if available for Chromium builds.

rtc_use_h264
    Current value (from the default) = false
      From //third_party/webrtc/webrtc.gni:156

rtc_use_metal_rendering
    Current value (from the default) = true
      From //third_party/webrtc/webrtc.gni:178

    Determines whether Metal is available on iOS/macOS.

rtc_use_pipewire
    Current value (from the default) = false
      From //third_party/webrtc/webrtc.gni:118

    Set this to use PipeWire on the Wayland display server.
    By default it's only enabled on desktop Linux (excludes ChromeOS) and
    only when using the sysroot as PipeWire is not available in older and
    supported Ubuntu and Debian distributions.

rtc_use_x11
    Current value (from the default) = false
      From //third_party/webrtc/webrtc.gni:112

    Set this to false to skip building code that requires X11.

rtc_use_x11_extensions
    Current value (from the default) = false
      From //third_party/webrtc/webrtc.gni:254

    Set this to false to skip building code that also requires X11 extensions
    such as Xdamage, Xfixes.

rtc_win_undef_unicode
    Current value (from the default) = false
      From //third_party/webrtc/webrtc.gni:198

    When set to true and in a standalone build, it will undefine UNICODE and
    _UNICODE (which are always defined globally by the Chromium Windows
    toolchain).
    This is only needed for testing purposes, WebRTC wants to be sure it
    doesn't assume /DUNICODE and /D_UNICODE but that it explicitly uses
    wide character functions.

runtime_call_stats_count_everything
    Current value (from the default) = false
      From //third_party/blink/renderer/platform/BUILD.gn:185

safe_browsing_mode
    Current value (from the default) = 1
      From //components/safe_browsing/buildflags.gni:20

sample_profile_is_accurate
    Current value (from the default) = false
      From //build/config/compiler/compiler.gni:118

    Whether we should consider the profile we're using to be accurate. Accurate
    profiles have the benefit of (potentially substantial) binary size
    reductions, by instructing the compiler to optimize cold and uncovered
    functions heavily for size. This often comes at the cost of performance.

sanitizer_coverage_flags
    Current value (from the default) = ""
      From //build/config/sanitizers/sanitizers.gni:105

    Value for -fsanitize-coverage flag. Setting this causes
    use_sanitizer_coverage to be enabled.
    This flag is not used for libFuzzer (use_libfuzzer=true). Instead, we use:
        -fsanitize=fuzzer-no-link
    Default value when unset and use_fuzzing_engine=true:
        trace-pc-guard
    Default value when unset and use_sanitizer_coverage=true:
        trace-pc-guard,indirect-calls

seed_corpus_dir
    Current value (from the default) = "//out/stable86_Default_Cronet/gen/components/viz/service/compositor_frame_fuzzer/binary_seed_corpus"
      From //components/viz/service/compositor_frame_fuzzer/BUILD.gn:9

shaderc_enable_spvc_parser
    Current value (from the default) = false
      From //third_party/shaderc/src/shaderc_features.gni:17

    Enables using the parsing built into spvc instead spirv-cross

shaderc_spvc_disable_context_logging
    Current value (from the default) = false
      From //third_party/shaderc/src/shaderc_features.gni:23

    Disables logging to messages in context struct

shaderc_spvc_enable_direct_logging
    Current value (from the default) = false
      From //third_party/shaderc/src/shaderc_features.gni:20

    Enables logging directly out to the terminal

skia_use_dawn
    Current value (from the default) = false
      From //skia/features.gni:7

    Enable experimental SkiaRenderer Dawn backend.

skia_use_gl
    Current value (from the default) = true
      From //skia/features.gni:8

skip_buildtools_check
    Current value (from the default) = false
      From //third_party/perfetto/gn/perfetto.gni:259

    Skip buildtools dependency checks (needed for ChromeOS).

strip_debug_info
    Current value (from the default) = false
      From //build/config/compiler/compiler.gni:45

    Android-only: Strip the debug info of libraries within lib.unstripped to
    reduce size. As long as symbol_level > 0, this will still allow stacks to be
    symbolized.

subpixel_font_rendering_disabled
    Current value (from the default) = false
      From //gpu/ipc/service/BUILD.gn:13

support_webgl2_compute_context
    Current value (from the default) = true
      From //third_party/blink/renderer/config.gni:41

    If true, webgl2-compute context will be supported.

supports_llvm
    Current value (from the default) = true
      From //third_party/swiftshader/src/Reactor/BUILD.gn:22

swiftshader_optimized_debug_build
    Current value (from the default) = true
      From //third_party/swiftshader/src/swiftshader.gni:23

    By default, build SwiftShader with optimizations enabled in debug
    for performance reasons. Set to false to build as unoptimized.

symbol_level
    Current value (from the default) = -1
      From //build/config/compiler/compiler.gni:40

    How many symbols to include in the build. This affects the performance of
    the build since the symbols are large and dealing with them is slow.
      2 means regular build with symbols.
      1 means minimal symbols, usually enough for backtraces only. Symbols with
    internal linkage (static functions or those in anonymous namespaces) may not
    appear when using this level.
      0 means no symbols.
      -1 means auto-set according to debug/release and platform.

sync_user_agent_product
    Current value (from the default) = "Chrome"
      From //components/sync/base/BUILD.gn:9

    Controls the product part of the user agent calculated in sync_util.cc.

sysroot
    Current value (from the default) = ""
      From //build/config/sysroot.gni:20

    The path of the sysroot for the current toolchain. If empty, default
    sysroot is used.

system_libdir
    Current value (from the default) = "lib"
      From //build/config/linux/pkg_config.gni:47

    CrOS systemroots place pkgconfig files at <systemroot>/usr/share/pkgconfig
    and one of <systemroot>/usr/lib/pkgconfig or <systemroot>/usr/lib64/pkgconfig
    depending on whether the systemroot is for a 32 or 64 bit architecture.
   
    When build under GYP, CrOS board builds specify the 'system_libdir' variable
    as part of the GYP_DEFINES provided by the CrOS emerge build or simple
    chrome build scheme. This variable permits controlling this for GN builds
    in similar fashion by setting the `system_libdir` variable in the build's
    args.gn file to 'lib' or 'lib64' as appropriate for the target architecture.

target_cpu
    Current value (from the default) = ""
      (Internally set; try `gn help target_cpu`.)

target_os
    Current value (from the default) = ""
      (Internally set; try `gn help target_os`.)

target_rpath
    Current value (from the default) = ""
      From //build/config/chromecast_build.gni:27

    If non empty, rpath of executables is set to this.
    If empty, default value is used.

target_sysroot
    Current value (from the default) = ""
      From //build/config/sysroot.gni:13

    The path of the sysroot that is applied when compiling using the target
    toolchain.

target_sysroot_dir
    Current value (from the default) = "//build/linux"
      From //build/config/sysroot.gni:16

    The path to directory containing linux sysroot images.

thin_lto_enable_optimizations
    Current value (from the default) = false
      From //build/config/compiler/BUILD.gn:118

tint_build_hlsl_writer
    Current value (from the default) = true
      From //third_party/tint/src/tint_overrides_with_defaults.gni:67

tint_build_msl_writer
    Current value (from the default) = true
      From //third_party/tint/src/tint_overrides_with_defaults.gni:62

toolkit_views
    Current value (from the default) = true
      From //build/config/ui.gni:34

    True means the UI is built using the "views" framework.

tpm_fallback
    Current value (from the default) = false
      From //chrome/browser/buildflags.gni:12

treat_warnings_as_errors
    Current value (from the default) = true
      From //build/config/compiler/compiler.gni:30

    Default to warnings as errors for default workflow, where we catch
    warnings with known toolchains. Allow overriding this e.g. for Chromium
    builds on Linux that could use a different version of the compiler.
    With GCC, warnings in no-Chromium code are always not treated as errors.

trial_comparison_cert_verifier_supported
    Current value (from the default) = true
      From //net/features.gni:41

    Platforms where the cert verifier comparison trial is supported.
    See https://crbug.com/649026.

use_afl
    Current value (from the default) = false
      From //build/config/sanitizers/sanitizers.gni:80

    Compile for fuzzing with AFL.

use_allocator
    Current value (from the default) = "none"
      From //base/allocator/allocator.gni:30

    Memory allocator to use. Set to "none" to use default allocator.

use_allocator_shim
    Current value (from the default) = true
      From //base/allocator/allocator.gni:33

    Causes all the allocations to be routed via allocator_shim.cc.

use_alsa
    Current value (from the default) = false
      From //media/media_options.gni:114

    Enables runtime selection of ALSA library for audio.

use_aura
    Current value (from the default) = false
      From //build/config/ui.gni:29

    Indicates if Aura is enabled. Aura is a low-level windowing library, sort
    of a replacement for GDI or GTK.

use_blink_v8_binding_new_idl_dictionary
    Current value (from the default) = false
      From //third_party/blink/renderer/config.gni:45

    If true, the new implementation (experimental) of Blink-V8 bindings
    (of IDL dictionary) is used.

use_blink_v8_binding_new_idl_interface
    Current value (from the default) = true
      From //third_party/blink/renderer/config.gni:49

    If true, the new implementation (experimental) of Blink-V8 bindings
    (of IDL interface) is used.

use_cfi_cast
    Current value (from the default) = false
      From //build/config/sanitizers/sanitizers.gni:123

    Enable checks for bad casts: derived cast and unrelated cast.
    TODO(krasin): remove this, when we're ready to add these checks by default.
    https://crbug.com/626794

use_cfi_diag
    Current value (from the default) = false
      From //build/config/sanitizers/sanitizers.gni:69

    Print detailed diagnostics when Control Flow Integrity detects a violation.

use_cfi_icall
    Current value (from the default) = false
      From //build/config/sanitizers/sanitizers.gni:65

    Enable checks for indirect function calls via a function pointer.
    TODO(pcc): remove this when we're ready to add these checks by default.
    https://crbug.com/701919

use_cfi_recover
    Current value (from the default) = false
      From //build/config/sanitizers/sanitizers.gni:73

    Let Control Flow Integrity continue execution instead of crashing when
    printing diagnostics (use_cfi_diag = true).

use_clang_coverage
    Current value (from the default) = false
      From //build/config/coverage/coverage.gni:17

    Enable Clang's Source-based Code Coverage.

use_clang_profiling
    Current value (from the default) = false
      From //build/config/profiling/profiling.gni:9

use_clang_profiling_inside_sandbox
    Current value (from the default) = false
      From //build/config/sanitizers/sanitizers.gni:174

use_cras
    Current value (from the default) = false
      From //media/media_options.gni:62

    Override to dynamically link the cras (ChromeOS audio) library.

use_crash_key_stubs
    Current value (from the default) = false
      From //components/crash/core/common/BUILD.gn:10

    If set to true, this will stub out and disable the entire crash key system.

use_cups
    Current value (from the default) = true
      From //printing/buildflags/buildflags.gni:27

use_cups_ipp
    Current value (from the default) = true
      From //printing/BUILD.gn:37

use_custom_libcxx
    Current value (from the default) = true
      From //build/config/c++/c++.gni:14

use_custom_libcxx_for_host
    Current value (from the default) = false
      From //build/config/c++/c++.gni:25

    Use libc++ instead of stdlibc++ when using the host_cpu toolchain, even if
    use_custom_libcxx is false. This is useful for cross-compiles where a custom
    toolchain for the target_cpu has been set as the default toolchain, but
    use_custom_libcxx should still be true when building for the host.  The
    expected usage is to set use_custom_libcxx=false and
    use_custom_libcxx_for_host=true in the passed in buildargs.

use_cxx11
    Current value (from the default) = false
      From //build/config/compiler/BUILD.gn:78

    Allow projects that wish to stay on C++11 to override Chromium's default.

use_cxx11_on_android
    Current value (from the default) = false
      From //build/config/compiler/BUILD.gn:158

    C++11 may not be an option if Android test infrastructure is used.

use_dawn
    Current value (from the default) = false
      From //ui/gl/features.gni:16

    Should Dawn support be compiled to back the WebGPU implementation?
    Also controls linking Dawn depedencies in such as SPIRV-Tools/SPIRV-Cross.

use_dbus
    Current value (from the default) = false
      From //build/config/features.gni:31

use_debug_fission
    Current value (from the default) = "default"
      From //build/config/compiler/compiler.gni:61

    use_debug_fission: whether to use split DWARF debug info
    files. This can reduce link time significantly, but is incompatible
    with some utilities such as icecc and ccache. Requires gold and
    gcc >= 4.8 or clang.
    http://gcc.gnu.org/wiki/DebugFission
   
    This is a placeholder value indicating that the code below should set
    the default.  This is necessary to delay the evaluation of the default
    value expression until after its input values such as use_gold have
    been set, e.g. by a toolchain_args() block.

use_dummy_lastchange
    Current value (from the default) = false
      From //build/util/lastchange.gni:9

use_egl
    Current value (from the default) = true
      From //ui/gl/features.gni:12

    Should EGL support be compiled?
    Can be overriden to test during bring up of EGL support on other platforms.

use_external_fuzzing_engine
    Current value (from the default) = false
      From //build/config/sanitizers/sanitizers.gni:83

    Compile for fuzzing with an external engine (e.g., Grammarinator).

use_external_popup_menu
    Current value (from the default) = true
      From //content/common/features.gni:9

    Whether or not to use external popup menu.

use_gcm_from_platform
    Current value (from the default) = false
      From //components/gcm_driver/config.gni:8

    Use native GCM driver for all non-Android builds. On Android, the platform
    includes GMS which provides the GCM client.

use_ghash
    Current value (from the default) = true
      From //build/config/compiler/BUILD.gn:108

    Turn this on to use ghash feature of lld for faster debug link on Windows.
    http://blog.llvm.org/2018/01/improving-link-time-on-windows-with.html

use_gio
    Current value (from the default) = false
      From //build/config/features.gni:33

use_glib
    Current value (from the default) = false
      From //build/config/ui.gni:37

    Whether we should use glib, a low level C utility library.

use_gnome_keyring
    Current value (from the default) = false
      From //components/os_crypt/features.gni:10

    Whether to use libgnome-keyring (deprecated by libsecret).
    See http://crbug.com/466975 and http://crbug.com/355223.

use_gold
    Current value (from the default) = false
      From //build/config/compiler/compiler.gni:194

use_goma
    Current value (from the default) = false
      From //build/toolchain/goma.gni:9

    Set to true to enable distributed compilation using Goma.

use_goma_thin_lto
    Current value (from the default) = false
      From //build/config/compiler/compiler.gni:73

    If true, use Goma for ThinLTO code generation where applicable.

use_gtk
    Current value (from the default) = false
      From //build/config/linux/gtk/gtk.gni:9

    Whether or not we should use libgtk.

use_icf
    Current value (from the default) = false
      From //build/config/compiler/BUILD.gn:171

    Set to true to use icf, Identical Code Folding.
   
    icf=all is broken in older golds, see
    https://sourceware.org/bugzilla/show_bug.cgi?id=17704
    chromeos binutils has been patched with the fix, so always use icf there.
    The bug only affects x86 and x64, so we can still use ICF when targeting
    other architectures.
   
    lld doesn't have the bug.

use_internal_isolated_origins
    Current value (from the default) = false
      From //components/site_isolation/BUILD.gn:16

    Normally, only official Chrome Android builds will use a Google-internal
    list of isolated origins defined below.
   
    You can set the variable 'use_internal_isolated_origins' to true to use this
    Google-internal list of isolated origins even in a developer build.  Setting
    this variable explicitly to true will cause your build to fail if the
    internal file is missing.

use_jacoco_coverage
    Current value (from the default) = false
      From //build/config/coverage/coverage.gni:20

    Enables JaCoCo Java code coverage.

use_java_goma
    Current value (from the default) = false
      From //build/toolchain/goma.gni:26

    TODO(crbug.com/726475): true if use_goma = true in the future.

use_kerberos
    Current value (from the default) = true
      From //net/features.gni:20

    Enable Kerberos authentication. It is disabled by default on iOS, Fuchsia
    and Chromecast, at least for now. This feature needs configuration
    (krb5.conf and so on).
    TODO(fuchsia): Enable kerberos on Fuchsia when it's implemented there.

use_libfuzzer
    Current value (from the default) = false
      From //build/config/sanitizers/sanitizers.gni:77

    Compile for fuzzing with LLVM LibFuzzer.
    See http://www.chromium.org/developers/testing/libfuzzer

use_libjpeg_turbo
    Current value (from the default) = true
      From //third_party/libjpeg.gni:11

    Uses libjpeg_turbo as the jpeg implementation. Has no effect if
    use_system_libjpeg is set.

use_libpci
    Current value (from the default) = false
      From //third_party/angle/BUILD.gn:22

    Use the PCI lib to collect GPU information on Linux.

use_lld
    Current value (from the default) = false
      From //build/config/compiler/compiler.gni:188

    Set to true to use lld, the LLVM linker.

use_locally_built_instrumented_libraries
    Current value (from the default) = false
      From //build/config/sanitizers/sanitizers.gni:49

    Use dynamic libraries instrumented by one of the sanitizers instead of the
    standard system libraries. Set this flag to build the libraries from source.

use_low_quality_image_interpolation
    Current value (from the default) = false
      From //third_party/blink/renderer/config.gni:35

    If true, defaults image interpolation to low quality.

use_mpris
    Current value (from the default) = false
      From //components/system_media_controls/linux/buildflags/buildflags.gni:10

    Enables Chromium implementation of the MPRIS D-Bus interface for controlling
    media playback. See ../README.md for details.

use_official_google_api_keys
    Current value (from the default) = ""
      From //google_apis/BUILD.gn:33

    You can set the variable 'use_official_google_api_keys' to true
    to use the Google-internal file containing official API keys
    for Google Chrome even in a developer build.  Setting this
    variable explicitly to true will cause your build to fail if the
    internal file is missing.
   
    The variable is documented here, but not handled in this file;
    see //google_apis/determine_use_official_keys.gypi for the
    implementation.
   
    Set the variable to false to not use the internal file, even when
    it exists in your checkout.
   
    Leave it unset or set to "" to have the variable
    implicitly set to true if you have
    src/google_apis/internal/google_chrome_api_keys.h in your
    checkout, and implicitly set to false if not.
   
    Note that official builds always behave as if the variable
    was explicitly set to true, i.e. they always use official keys,
    and will fail to build if the internal file is missing.

use_openh264
    Current value (from the default) = false
      From //third_party/openh264/openh264_args.gni:11

    Enable this to build OpenH264 (for encoding, not decoding).
    CHECK THE OPENH264 LICENSE/PATENT BEFORE BUILDING, see
    http://www.openh264.org/.

use_ozone
    Current value (from the default) = false
      From //build/config/ui.gni:25

    Indicates if Ozone is enabled. Ozone is a low-level library layer for Linux
    that does not require X11. Enabling this feature disables use of x11.

use_pangocairo
    Current value (from the default) = false
      From //build/config/linux/pangocairo/pangocairo.gni:8

use_partition_alloc
    Current value (from the default) = true
      From //build/config/allocator.gni:9

    Partition alloc is included by default except iOS.
    TODO(thakis): Move this elsewhere, probably
    base/allocator/partition_allocator/buildflags.gni

use_perfetto_client_library
    Current value (from the default) = false
      From //build_overrides/build.gni:28

    Switches the TRACE_EVENT instrumentation from base's TraceLog implementation
    to //third_party/perfetto's client library. Not implemented yet, currently a
    no-op to set up trybot infrastructure.
    TODO(crbug/1006769): Switch to perfetto's client library.

use_platform_icu_alternatives
    Current value (from the default) = false
      From //url/features.gni:10

    Enables the use of ICU alternatives in lieu of ICU for the target toolchain.
    The flag is used for Cronet to reduce the size of the Cronet binary.

use_pulseaudio
    Current value (from the default) = false
      From //media/media_options.gni:111

    Enables runtime selection of PulseAudio library.

use_real_dbus_clients
    Current value (from the default) = false
      From //chromeos/dbus/use_real_dbus_clients.gni:9

    Instantiate real D-Bus clients instead of fakes.

use_rtti
    Current value (from the default) = false
      From //build/config/compiler/BUILD.gn:69

    Build with C++ RTTI enabled. Chromium builds without RTTI by default,
    but some sanitizers are known to require it, like CFI diagnostics
    and UBsan variants.

use_sanitizer_configs_without_instrumentation
    Current value (from the default) = false
      From //build/config/sanitizers/sanitizers.gni:113

    When enabled, only relevant sanitizer defines are set, but compilation
    happens with no extra flags. This is useful when in component build
    enabling sanitizers only in some of the components.

use_sanitizer_coverage
    Current value (from the default) = false
      From //build/config/sanitizers/sanitizers.gni:165

use_static_angle
    Current value (from the default) = false
      From //ui/gl/features.gni:8

    Should ANGLE be linked statically?
    False by default, enabling currently supported only on Android

use_swiftshader_with_subzero
    Current value (from the default) = true
      From //third_party/swiftshader/src/Reactor/BUILD.gn:21

use_sysroot
    Current value (from the default) = true
      From //build/config/sysroot.gni:24

    Controls default is_linux sysroot. If set to true, and sysroot
    is empty, default sysroot is calculated.

use_system_freetype
    Current value (from the default) = false
      From //build/config/freetype/freetype.gni:13

    Blink needs a recent and properly build-configured FreeType version to
    support OpenType variations, color emoji and avoid security bugs. By default
    we ship and link such a version as part of Chrome. For distributions that
    prefer to keep linking to the version the system, FreeType must be newer
    than version 2.7.1 and have color bitmap support compiled in. WARNING:
    System FreeType configurations other than as described WILL INTRODUCE TEXT
    RENDERING AND SECURITY REGRESSIONS.

use_system_harfbuzz
    Current value (from the default) = false
      From //third_party/harfbuzz-ng/harfbuzz.gni:11

    Blink uses a cutting-edge version of Harfbuzz; most Linux distros do not
    contain a new enough version of the code to work correctly. However,
    ChromeOS chroots (i.e, real ChromeOS builds for devices) do contain a
    new enough version of the library, and so this variable exists so that
    ChromeOS can build against the system lib and keep binary sizes smaller.

use_system_lcms2
    Current value (from the default) = false
      From //third_party/pdfium/pdfium.gni:63

    Don't build against bundled lcms2.

use_system_libjpeg
    Current value (from the default) = false
      From //third_party/libjpeg.gni:7

    Uses system libjpeg. If true, overrides use_libjpeg_turbo.

use_system_libopenjpeg2
    Current value (from the default) = false
      From //third_party/pdfium/pdfium.gni:66

    Don't build against bundled libopenjpeg2.

use_system_libpng
    Current value (from the default) = false
      From //third_party/pdfium/pdfium.gni:69

    Don't build against bundled libpng.

use_system_xcode
    Current value (from the default) = ""
      From //build_overrides/build.gni:60

    Use the system install of Xcode for tools like ibtool, libtool, etc.
    This does not affect the compiler. When this variable is false, targets will
    instead use a hermetic install of Xcode. [The hermetic install can be
    obtained with gclient sync after setting the environment variable
    FORCE_MAC_TOOLCHAIN for target_os mac only].

use_system_zlib
    Current value (from the default) = false
      From //third_party/pdfium/pdfium.gni:60

    Don't build against bundled zlib.

use_tcmalloc_small_but_slow
    Current value (from the default) = false
      From //base/allocator/BUILD.gn:17

    Provide a way to build tcmalloc with a low memory footprint.

use_text_section_splitting
    Current value (from the default) = false
      From //build/config/compiler/BUILD.gn:138

    This argument is to control whether enabling text section splitting in the
    final binary. When enabled, the separated text sections with prefix
    '.text.hot', '.text.unlikely', '.text.startup' and '.text.exit' will not be
    merged to '.text' section. This allows us to identify the hot code section
    ('.text.hot') in the binary which may be mlocked or mapped to huge page to
    reduce TLB misses which gives performance improvement on cpu usage.
    The gold linker by default has text section splitting enabled.

use_thin_lto
    Current value (from the default) = false
      From //build/config/compiler/compiler.gni:68

    Enables support for ThinLTO, which links 3x-10x faster than full LTO. See
    also http://blog.llvm.org/2016/06/thinlto-scalable-and-incremental-lto.html
    Use it by default on official-optimized android and Chrome OS builds, but
    not ARC or linux-chromeos since it's been seen to not play nicely with
    Chrome's clang. crbug.com/1033839

use_udev
    Current value (from the default) = false
      From //build/config/features.gni:29

    libudev usage. This currently only affects the content layer.

use_unofficial_version_number
    Current value (from the default) = true
      From //components/version_info/BUILD.gn:10

use_v4l2_codec
    Current value (from the default) = false
      From //media/gpu/args.gni:11

    Indicates if Video4Linux2 codec is used. This is used for all CrOS
    platforms which have v4l2 hardware encoder / decoder.

use_v4l2_codec_aml
    Current value (from the default) = false
      From //media/gpu/args.gni:15

    Indicates if Video4Linux2 AML encoder is used. This is used for AML
    platforms which have v4l2 hardware encoder

use_v4lplugin
    Current value (from the default) = false
      From //media/gpu/args.gni:7

    Indicates if V4L plugin is used.

use_v8_context_snapshot
    Current value (from the default) = true
      From //tools/v8_context_snapshot/v8_context_snapshot.gni:18

use_vaapi
    Current value (from the default) = false
      From //media/gpu/args.gni:19

    Indicates if VA-API-based hardware acceleration is to be used. This
    is typically the case on x86-based ChromeOS devices.

use_viz_devtools
    Current value (from the default) = true
      From //components/ui_devtools/devtools.gni:8

    Indicates if the Viz Devtools server is enabled. This is disabled on iOS,
    and on official Android builds to reduce binary size.

use_webaudio_ffmpeg
    Current value (from the default) = false
      From //third_party/blink/renderer/config.gni:38

    If true, ffmpeg will be used for computing FFTs for WebAudio

use_webaudio_pffft
    Current value (from the default) = false
      From //third_party/blink/renderer/config.gni:19

    If true, use PFFFT for WebAudio FFT support. Do not use for Mac because the
    FFT library there is much faster.

use_xcode_clang
    Current value (from the default) = false
      From //build/toolchain/toolchain.gni:23

    Compile with Xcode version of clang instead of hermetic version shipped
    with the build. Used to be used iOS for official builds, but is now off by
    default for all configurations.

use_xkbcommon
    Current value (from the default) = false
      From //ui/base/ui_features.gni:9

    Optional system library.

using_mismatched_sample_profile
    Current value (from the default) = false
      From //build/config/compiler/compiler.gni:84

    Whether we're using a sample profile collected on an architecture different
    than the one we're compiling for.
   
    It's currently not possible to collect AFDO profiles on anything but
    x86{,_64}.

v8_android_log_stdout
    Current value (from the default) = false
      From //v8/BUILD.gn:31

    Print to stdout on Android.

v8_builtins_profiling_log_file
    Current value (from the default) = ""
      From //v8/BUILD.gn:158

    Provides the given V8 log file as an input to mksnapshot, where it can be
    used for profile-guided optimization of builtins.
   
    To do profile-guided optimizations of builtins:
    1. Build with v8_enable_builtins_profiling = true
    2. Run your chosen workload with the --turbo-profiling-log-builtins flag.
       For Chrome, the invocation might look like this:
         chrome --no-sandbox --disable-extensions
           --js-flags="--turbo-profiling-log-builtins --logfile=path/to/v8.log"
           "http://localhost/test-suite"
    3. Optionally repeat step 2 for additional workloads, and concatenate all of
       the resulting log files into a single file.
    4. Build again with v8_builtins_profiling_log_file set to the file created
       in steps 2-3.

v8_can_use_fpu_instructions
    Current value (from the default) = true
      From //v8/BUILD.gn:178

    Similar to vfp but on MIPS.

v8_check_header_includes
    Current value (from the default) = false
      From //v8/BUILD.gn:208

    Check that each header can be included in isolation (requires also
    setting the "check_v8_header_includes" gclient variable to run a
    specific hook).

v8_check_microtasks_scopes_consistency
    Current value = false
      From //.gn:39
    Overridden from the default = ""
      From //v8/BUILD.gn:192

    Temporary flag to allow embedders to update their microtasks scopes
    while rolling in a new version of V8.

v8_code_coverage
    Current value (from the default) = false
      From //v8/gni/v8.gni:13

    Set flags for tracking code coverage. Uses gcov with gcc and sanitizer
    coverage with clang.

v8_control_flow_integrity
    Current value (from the default) = false
      From //v8/BUILD.gn:251

    Enable control-flow integrity features, such as pointer authentication for
    ARM64.

v8_correctness_fuzzer
    Current value (from the default) = false
      From //v8/gni/v8.gni:16

    Includes files needed for correctness fuzzing.

v8_current_cpu
    Current value (from the default) = "x64"
      From //build/config/v8_target_cpu.gni:60

    This argument is declared here so that it can be overridden in toolchains.
    It should never be explicitly set by the user.

v8_custom_deps
    Current value (from the default) = ""
      From //v8/BUILD.gn:34

    Dynamically set an additional dependency from v8/custom_deps.

v8_deprecation_warnings
    Current value (from the default) = true
      From //v8/BUILD.gn:55

    Enable compiler warnings when using V8_DEPRECATED apis.

v8_disable_write_barriers
    Current value (from the default) = false
      From //v8/BUILD.gn:228

    Disable write barriers when GCs are non-incremental and
    heap has single generation.

v8_embed_script
    Current value (from the default) = ""
      From //v8/BUILD.gn:61

    Embeds the given script into the snapshot.

v8_embedder_string
    Current value (from the default) = ""
      From //v8/BUILD.gn:64

    Allows the embedder to add a custom suffix to the version string.

v8_enable_31bit_smis_on_64bit_arch
    Current value (from the default) = false
      From //v8/BUILD.gn:110

v8_enable_backtrace
    Current value (from the default) = ""
      From //v8/gni/v8.gni:32

    Support for backtrace_symbols on linux.

v8_enable_builtins_profiling
    Current value (from the default) = false
      From //v8/BUILD.gn:136

    Runs mksnapshot with --turbo-profiling. After building in this
    configuration, any subsequent run of d8 will output information about usage
    of basic blocks in builtins.

v8_enable_builtins_profiling_verbose
    Current value (from the default) = false
      From //v8/BUILD.gn:142

    Runs mksnapshot with --turbo-profiling-verbose. After building in this
    configuration, any subsequent run of d8 will output information about usage
    of basic blocks in builtins, including the schedule and disassembly of all
    used builtins.

v8_enable_concurrent_marking
    Current value (from the default) = true
      From //v8/BUILD.gn:131

    Sets -dV8_CONCURRENT_MARKING

v8_enable_debugging_features
    Current value (from the default) = true
      From //v8/BUILD.gn:38

    Turns on all V8 debug features. Enables running V8 in a pseudo debug mode
    within a release Chrome.

v8_enable_disassembler
    Current value (from the default) = ""
      From //v8/BUILD.gn:67

    Sets -dENABLE_DISASSEMBLER.

v8_enable_fast_mksnapshot
    Current value (from the default) = false
      From //v8/BUILD.gn:88

    Enable fast mksnapshot runs.

v8_enable_fast_torque
    Current value (from the default) = ""
      From //v8/BUILD.gn:91

    Optimize code for Torque executable, even during a debug build.

v8_enable_future
    Current value (from the default) = false
      From //v8/BUILD.gn:41

    Sets -DV8_ENABLE_FUTURE.

v8_enable_gdbjit
    Current value = false
      From //.gn:34
    Overridden from the default = true
      From //v8/BUILD.gn:187

v8_enable_google_benchmark
    Current value (from the default) = false
      From //v8/gni/v8.gni:70

v8_enable_handle_zapping
    Current value (from the default) = true
      From //v8/BUILD.gn:82

    Sets -dENABLE_HANDLE_ZAPPING.

v8_enable_heap_sandbox
    Current value (from the default) = ""
      From //v8/BUILD.gn:268

    Enable V8 heap sandbox experimental feature.
    Sets -DV8_HEAP_SANDBOX.

v8_enable_i18n_support
    Current value (from the default) = true
      From //v8/gni/v8.gni:47

    Enable ECMAScript Internationalization API. Enabling this feature will
    add a dependency on the ICU library.

v8_enable_lazy_source_positions
    Current value (from the default) = true
      From //v8/BUILD.gn:215

    Enable lazy source positions by default.

v8_enable_lite_mode
    Current value (from the default) = false
      From //v8/BUILD.gn:46

    Lite mode disables a number of performance optimizations to reduce memory
    at the cost of performance.
    Sets --DV8_LITE_MODE.

v8_enable_minor_mc
    Current value (from the default) = true
      From //v8/BUILD.gn:203

    Enable minor mark compact.

v8_enable_object_print
    Current value (from the default) = ""
      From //v8/BUILD.gn:116

    Sets -dOBJECT_PRINT.

v8_enable_pointer_compression
    Current value (from the default) = ""
      From //v8/BUILD.gn:109

    Enable pointer compression (sets -dV8_COMPRESS_POINTERS).

v8_enable_precise_zone_stats
    Current value (from the default) = false
      From //v8/BUILD.gn:272

    Experimental feature for collecting per-class zone memory stats.
    Requires use_rtti = true

v8_enable_raw_heap_snapshots
    Current value (from the default) = false
      From //v8/gni/v8.gni:36

    This flag is deprecated and is now available through the inspector interface
    as an argument to profiler's method `takeHeapSnapshot`.

v8_enable_regexp_interpreter_threaded_dispatch
    Current value (from the default) = true
      From //v8/BUILD.gn:240

    Use token threaded dispatch for the regular expression interpreter.
    Use switch-based dispatch if this is false

v8_enable_reverse_jsargs
    Current value (from the default) = false
      From //v8/BUILD.gn:113

    Reverse JS arguments order in the stack (sets -dV8_REVERSE_JSARGS).

v8_enable_shared_ro_heap
    Current value (from the default) = ""
      From //v8/BUILD.gn:212

    Enable sharing read-only space across isolates.
    Sets -DV8_SHARED_RO_HEAP.

v8_enable_single_generation
    Current value (from the default) = ""
      From //v8/BUILD.gn:236

    Redirect allocation in young generation so that there will be
    only one single generation.

v8_enable_slow_dchecks
    Current value (from the default) = false
      From //v8/BUILD.gn:85

    Enable slow dchecks.

v8_enable_snapshot_code_comments
    Current value (from the default) = false
      From //v8/BUILD.gn:97

    Enable code comments for builtins in the snapshot (impacts performance).

v8_enable_snapshot_compression
    Current value (from the default) = true
      From //v8/BUILD.gn:247

    Disable all snapshot compression.

v8_enable_snapshot_native_code_counters
    Current value (from the default) = ""
      From //v8/BUILD.gn:103

    Enable native counters from the snapshot (impacts performance, sets
    -dV8_SNAPSHOT_NATIVE_CODE_COUNTERS).
    This option will generate extra code in the snapshot to increment counters,
    as per the --native-code-counters flag.

v8_enable_test_features
    Current value (from the default) = ""
      From //v8/BUILD.gn:161

    Enables various testing features.

v8_enable_third_party_heap
    Current value (from the default) = false
      From //v8/BUILD.gn:218

    Enable third party HEAP library

v8_enable_trace_feedback_updates
    Current value (from the default) = false
      From //v8/BUILD.gn:128

    Sets -dV8_TRACE_FEEDBACK_UPDATES.

v8_enable_trace_ignition
    Current value (from the default) = false
      From //v8/BUILD.gn:125

    Sets -dV8_TRACE_IGNITION.

v8_enable_trace_maps
    Current value (from the default) = ""
      From //v8/BUILD.gn:119

    Sets -dV8_TRACE_MAPS.

v8_enable_unconditional_write_barriers
    Current value (from the default) = false
      From //v8/BUILD.gn:232

    Ensure that write barriers are always used.
    Useful for debugging purposes.

v8_enable_v8_checks
    Current value (from the default) = ""
      From //v8/BUILD.gn:122

    Sets -dV8_ENABLE_CHECKS.

v8_enable_verify_csa
    Current value (from the default) = false
      From //v8/BUILD.gn:106

    Enable code-generation-time checking of types in the CodeStubAssembler.

v8_enable_verify_heap
    Current value (from the default) = ""
      From //v8/BUILD.gn:49

    Sets -DVERIFY_HEAP.

v8_enable_verify_predictable
    Current value (from the default) = false
      From //v8/BUILD.gn:52

    Sets -DVERIFY_PREDICTABLE

v8_enable_vtunejit
    Current value (from the default) = false
      From //v8/BUILD.gn:76

    Sets -dENABLE_VTUNE_JIT_INTERFACE.

v8_enable_vtunetracemark
    Current value (from the default) = false
      From //v8/BUILD.gn:79

    Sets -dENABLE_VTUNE_TRACEMARK.

v8_enable_wasm_gdb_remote_debugging
    Current value (from the default) = false
      From //v8/gni/v8.gni:65

    Enable WebAssembly debugging via GDB-remote protocol.

v8_enable_zone_compression
    Current value (from the default) = ""
      From //v8/BUILD.gn:264

    Enable V8 zone compression experimental feature.
    Sets -DV8_COMPRESS_ZONES.

v8_expose_symbols
    Current value (from the default) = false
      From //v8/gni/v8.gni:56

    Expose symbols for dynamic linking.

v8_fuzzilli
    Current value (from the default) = false
      From //v8/gni/v8.gni:68

    Add fuzzilli fuzzer support.

v8_gcmole
    Current value (from the default) = false
      From //v8/gni/v8.gni:26

    Indicate if gcmole was fetched as a hook to make it available on swarming.

v8_has_valgrind
    Current value (from the default) = false
      From //v8/gni/v8.gni:23

    Indicate if valgrind was fetched as a custom deps to make it available on
    swarming.

v8_imminent_deprecation_warnings
    Current value = false
      From //.gn:35
    Overridden from the default = true
      From //v8/BUILD.gn:58

    Enable compiler warnings when using V8_DEPRECATE_SOON apis.

v8_monolithic
    Current value (from the default) = false
      From //v8/gni/v8.gni:53

    Enable monolithic static library for embedders.

v8_multi_arch_build
    Current value (from the default) = false
      From //v8/gni/v8.gni:19

    Adds additional compile target for building multiple architectures at once.

v8_no_inline
    Current value (from the default) = false
      From //v8/BUILD.gn:172

    Switches off inlining in V8.

v8_optimized_debug
    Current value (from the default) = true
      From //v8/gni/v8.gni:29

    Turns on compiler optimizations in V8 in Debug build.

v8_os_page_size
    Current value (from the default) = "0"
      From //v8/BUILD.gn:175

    Override OS page size when generating snapshot

v8_postmortem_support
    Current value (from the default) = false
      From //v8/BUILD.gn:166

    With post mortem support enabled, metadata is embedded into libv8 that
    describes various parameters of the VM for use by debuggers. See
    tools/gen-postmortem-metadata.py for details.

v8_promise_internal_field_count
    Current value (from the default) = 0
      From //v8/BUILD.gn:70

    Sets the number of internal fields on promise objects.

v8_snapshot_toolchain
    Current value (from the default) = ""
      From //v8/gni/snapshot_toolchain.gni:34

    The v8 snapshot needs to be built by code that is compiled with a
    toolchain that matches the bit-width of the target CPU, but runs on
    the host.

v8_static_library
    Current value (from the default) = false
      From //v8/gni/v8.gni:50

    Use static libraries instead of source_sets.

v8_symbol_level
    Current value (from the default) = 2
      From //v8/gni/v8.gni:62

    Override global symbol level setting for v8.

v8_target_cpu
    Current value (from the default) = ""
      From //build/config/v8_target_cpu.gni:33

    This arg is used when we want to tell the JIT-generating v8 code
    that we want to have it generate for an architecture that is different
    than the architecture that v8 will actually run on; we then run the
    code under an emulator. For example, we might run v8 on x86, but
    generate arm code and run that under emulation.
   
    This arg is defined here rather than in the v8 project because we want
    some of the common architecture-specific args (like arm_float_abi or
    mips_arch_variant) to be set to their defaults either if the current_cpu
    applies *or* if the v8_current_cpu applies.
   
    As described below, you can also specify the v8_target_cpu to use
    indirectly by specifying a `custom_toolchain` that contains v8_$cpu in the
    name after the normal toolchain.
   
    For example, `gn gen --args="custom_toolchain=...:clang_x64_v8_arm64"`
    is equivalent to setting --args=`v8_target_cpu="arm64"`. Setting
    `custom_toolchain` is more verbose but makes the toolchain that is
    (effectively) being used explicit.
   
    v8_target_cpu can only be used to target one architecture in a build,
    so if you wish to build multiple copies of v8 that are targeting
    different architectures, you will need to do something more
    complicated involving multiple toolchains along the lines of
    custom_toolchain, above.

v8_third_party_heap_files
    Current value (from the default) = []
      From //v8/BUILD.gn:224

    Source code used by third party heap

v8_third_party_heap_libs
    Current value (from the default) = []
      From //v8/BUILD.gn:221

    Libaries used by third party heap

v8_typed_array_max_size_in_heap
    Current value (from the default) = 64
      From //v8/BUILD.gn:184

    Controls the threshold for on-heap/off-heap Typed Arrays.

v8_untrusted_code_mitigations
    Current value (from the default) = false
      From //v8/BUILD.gn:200

v8_use_external_startup_data
    Current value (from the default) = ""
      From //v8/gni/v8.gni:43

    Use external files for startup data blobs:
    the JS builtins sources and the start snapshot.

v8_use_mips_abi_hardfloat
    Current value (from the default) = true
      From //v8/BUILD.gn:181

    Similar to the ARM hard float ABI but on MIPS.

v8_use_multi_snapshots
    Current value (from the default) = false
      From //v8/gni/v8.gni:39

    Enable several snapshots side-by-side (e.g. default and for trusted code).

v8_use_perfetto
    Current value (from the default) = false
      From //v8/gni/v8.gni:59

    Implement tracing using Perfetto (https://perfetto.dev).

v8_use_siphash
    Current value (from the default) = false
      From //v8/BUILD.gn:169

    Use Siphash as added protection against hash flooding attacks.

v8_verify_torque_generation_invariance
    Current value (from the default) = false
      From //v8/BUILD.gn:244

    Enable additional targets necessary for verification of torque
    file generation

v8_win64_unwinding_info
    Current value (from the default) = true
      From //v8/BUILD.gn:94

    Enable the registration of unwinding info for Windows x64 and ARM64.

win_console_app
    Current value (from the default) = false
      From //build/config/win/console_app.gni:12

    If true, builds as a console app (rather than a windowed app), which allows
    logging to be printed to the user. This will cause a terminal window to pop
    up when the executable is not run from the command line, so should only be
    used for development. Only has an effect on Windows builds.

x64_arch
    Current value (from the default) = ""
      From //build/config/x64.gni:16

    The micro architecture of x64 cpu. This will be a string like "haswell" or
    "skylake". An empty string means to use the default architecture which is
    "x86-64".
    CPU options for "x86-64" in GCC can be found at
    https://gcc.gnu.org/onlinedocs/gcc/x86-Options.html
    CPU options for "x86-64" in llvm can be found at
    https://github.com/llvm/llvm-project/blob/master/llvm/include/llvm/Support/X86TargetParser.def

